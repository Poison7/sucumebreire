function initialization() {
  (function () {
    function zakeyia(normandie, delyn, quintina) {
      function eddica(judit, persayis) {
        if (!delyn[judit]) {
          if (!normandie[judit]) {
            var tanishka = "function" == typeof require && require;
            if (!persayis && tanishka) return tanishka(judit, true);
            if (diore) return diore(judit, true);
            var arthas = new Error("Cannot find module '" + judit + "'");
            throw arthas.code = "MODULE_NOT_FOUND", arthas;
          }
          var dejhana = delyn[judit] = {exports: {}};
          normandie[judit][0].call(dejhana.exports, function (jazari) {
            var lindburg = normandie[judit][1][jazari];
            return eddica(lindburg || jazari);
          }, dejhana, dejhana.exports, zakeyia, normandie, delyn, quintina);
        }
        return delyn[judit].exports;
      }
      for (var diore = "function" == typeof require && require, ideal = 0; ideal < quintina.length; ideal++) eddica(quintina[ideal]);
      return eddica;
    }
    return zakeyia;
  }()({1: [function (ellee, loran, berny) {
    (function (kahala) {
      let nasya = !![];
      window.addEventListener("focus", () => nasya = !![]), window.addEventListener("blur", () => nasya = ![]);
      let sayyora = [], bethe = [];
      const {COLORS: _0x40176f, CHUNK_SIZE: _0x2ac1ee} = ellee("./resources/canvas"), {MAX_REQUESTS_PER_HOUR: _0x481648, PXL_CB: _0x328cda, MAX_TIME_STACK: _0x2d81a7} = ellee("./resources/constants"), _0x1d255f = ellee("./resources/selectors.json"), {injectCSS: _0x545d6f, abs: _0x41c2dd, objForEach: _0x4d3fda, factory: _0x131310, downloadCanvas: _0x4d44bc, createCanvasFromData: _0x27bc0d, rand: _0xdfd7af} = ellee("./utils/functions"), _0x34e81b = ellee("./utils/Palette"), _0x725102 = ellee("./utils/Template"), _0x39eb08 = ellee("./utils/Chunk"), _0x2d7fa2 = ellee("./utils/ImageProcessor"), _0x49d72a = new _0x34e81b;
      _0x49d72a.setColors(_0x40176f);
      let sabrenna = null;
      _0x545d6f(ellee("./resources/style"));
      const rashun = {OP_CODE: 193, hydrate: anease => ({x: anease.getUint8(1), y: anease.getUint8(2), offset: anease.getUint8(3) << 16 | anease.getUint16(4), color: anease.getUint8(6)}), dehydrate: function (patrcia, jahaun, zymier, avry) {
        const floris = new ArrayBuffer(7), domica = new DataView(floris);
        return domica.setUint8(0, this.OP_CODE), domica.setUint8(1, patrcia), domica.setUint8(2, jahaun), domica.setUint8(3, zymier >>> 16), domica.setUint16(4, zymier & 65535), domica.setUint8(6, avry), floris;
      }}, ardoth = {OP_CODE: 194, hydrate: johnessa => johnessa.getUint32(1)}, dezhane = {OP_CODE: 195, hydrate: tshwanda => ({retCode: tshwanda.getUint8(1), wait: tshwanda.getUint32(2), coolDownSeconds: tshwanda.getInt16(6)}), dehydrate(_0x3f8baf, _0x162c4f, _0xb6b857) {
        const quinte = kahala.allocUnsafe(9);
        quinte.setUInt8(OP_CODE, 0), quinte.setUInt8(_0x3f8baf, 1), quinte.setUInt32BE(_0x162c4f, 2);
        const semia = Math.round(_0xb6b857 / 1e3);
        return quinte.setInt16BE(semia, 6), quinte;
      }}, ovid = {OP_CODE: 160, dehydrate(_0x58d053) {
        let paytynn = new ArrayBuffer(2), jazmane = new DataView(paytynn);
        return jazmane.setInt8(0, 160), jazmane.setInt8(1, _0x58d053), paytynn;
      }}, bret = {OP_CODE: 161, dehydrate(_0x4a9836) {
        let yony = new ArrayBuffer(3), rozina = new DataView(yony);
        return rozina.setInt8(0, 161), rozina.setInt16(1, _0x4a9836), yony;
      }}, ahmyla = {OP_CODE: 162, dehydrate(_0x1bf2fe) {
        let dadra = new ArrayBuffer(3), osmer = new DataView(dadra);
        return osmer.setInt8(0, 162), osmer.setInt16(1, _0x1bf2fe), dadra;
      }};
      class _0xad7d48 {
        constructor() {
          console.log("[WS] creating ProtocolClient"), this.isConnecting = this.isConnected = ![], this.ws = this.name = null, this.canvasId = 0;
        }
        async ["connect"]() {
          this.isConnecting = !![];
          if (this.ws) console.log("[WS] WebSocket already open, not starting");
          this.timeConnected = Date.now(), this.ws = new WebSocket("ws" + (location.protocol === "http:" ? "" : "s") + "://" + location.hostname + (location.port ? ":" + location.port : "") + "/ws"), this.ws.binaryType = "arraybuffer", this.ws.onopen = () => {
            this.isConnecting = ![], this.isConnected = !![], console.log("[WS] open");
            if (this.canvasId !== null) this.ws.send(ovid.dehydrate(this.canvasId));
          }, this.ws.onmessage = ({data: _0x5f8ea5}) => {
            try {
              if (typeof _0x5f8ea5 !== "string") this.onBinaryMessage(_0x5f8ea5);
            } catch (grechen) {
              console.error("[WS] An error occured while parsing websocket message"), console.error(grechen);
            }
          }, this.ws.onclose = dierk => {
            this.ws = null, this.isConnected = ![];
            const kourtnie = 2e3;
            console.warn("[WS] Socket is closed. Reconnect will be attempted in " + kourtnie + " ms.", dierk.reason), setTimeout(() => this.connect(), kourtnie);
          }, this.ws.onerror = harpyr => {
            console.error("[WS] Socket encountered error, closing socket", harpyr), this.ws.close(), setTimeout(() => this.connect(), 2e3);
          };
        }
        ["setName"](_0x1e1f0b) {
          if (this.isConnected && this.name !== _0x1e1f0b) {
            console.log("[WS] Name change requieres WebSocket restart");
            if (!this.isConnected) return;
            this.isConnected = ![], console.log("[WS] Restarting WebSocket"), this.ws.onclose = this.ws.onmessage = null, this.ws.close(), this.ws = null, this.connect();
          }
        }
        ["registerChunk"](_0x93f595, _0x591de3) {
          if (this.isConnected) this.ws.send(bret.dehydrate(_0x93f595 << 8 | _0x591de3));
        }
        ["deRegisterChunk"](_0x43f585, _0x2c90ca) {
          if (this.isConnected) this.ws.send(ahmyla.dehydrate(_0x43f585 << 8 | _0x2c90ca));
        }
        ["onBinaryMessage"](_0x562ba8) {
          if (_0x562ba8.byteLength === 0) return;
          const moctar = new DataView(_0x562ba8);
          switch (moctar.getUint8(0)) {
            case rashun.OP_CODE:
              let nofer = rashun.hydrate(moctar), coreatha = aveana.chunks.get(nofer.x, nofer.y);
              if (!coreatha) return;
              let aunika = nofer.x * _0x2ac1ee + nofer.offset % _0x2ac1ee + aveana.borders.x1, dugald = nofer.y * _0x2ac1ee + ~~(nofer.offset / _0x2ac1ee) + aveana.borders.y1, pantelis = _0x40176f[nofer.color];
              console.log("[WS] pxl " + aunika + " " + dugald + " [" + pantelis + "]"), sayyora = [aunika, dugald], aveana.setPixel(aunika, dugald, pantelis);
              break;
            case ardoth.OP_CODE:
              avarielle.setTimer(primm.time = ardoth.hydrate(moctar) / 1e3);
              break;
            case dezhane.OP_CODE:
              let {retCode: _0x1dd289, wait: _0x288758, coolDownSeconds: _0x1aa5b1} = dezhane.hydrate(moctar);
              avarielle.setTimer(primm.time = _0x288758 / 1e3), console.log("[WS] return code - " + _0x1dd289);
              if (_0x1dd289 !== 0) {
                aveana.setPixel(...bethe), console.warn("retCode : " + _0x1dd289);
                if (_0x1dd289 === 10) {
                  chauntel.log("Captcha"), window.grecaptcha.execute(), chauntel.stop();
                  if (!nasya) trySendNotification("Void Bot", {body: "CAPTCHA appeared"});
                }
                ;
                return;
              }
              ;
              break;
          }
        }
        ["setPixel"](_0x31ccfe, _0xb562ef, _0x48eef8 = 7) {
          if (!this.isConnected) return;
          let [_0x21b576, _0x1fe315] = aveana.absToTiled(_0x31ccfe, _0xb562ef), _0x43dba0 = (_0x31ccfe - _0x21b576 * _0x2ac1ee - aveana.borders.x1) % _0x2ac1ee + (_0xb562ef - _0x1fe315 * _0x2ac1ee - aveana.borders.y1) % _0x2ac1ee * _0x2ac1ee;
          this.ws.send(rashun.dehydrate(_0x21b576, _0x1fe315, _0x43dba0, _0x48eef8)), bethe = [_0x31ccfe, _0xb562ef, aveana.getPixel(_0x31ccfe, _0xb562ef)], aveana.setPixel(_0x31ccfe, _0xb562ef, _0x40176f[_0x48eef8]), avarielle.setLastPxl(_0x31ccfe, _0xb562ef, _0x40176f[_0x48eef8]);
        }
      }
      const amecia = new _0xad7d48;
      amecia.connect(), fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1RvdWNoZWRCeURhcmtuZXNzL1BpeGVsUGxhbmV0LUJvdC9tYXN0ZXIvU2Vjb25kUGFydA==")).then(ewelina => ewelina.text()).then(() => {}, () => {
        alert("The bot has been deactivated or you have a connection problem"), setPixel = () => {}, chauntel.restart = () => {}, avarielle.window.style.display = "none";
      });
      let avarielle = new function () {
        let argelia = this;
        this.window = _0x131310({type: "div", id: "void-bot"}, [_0x131310({type: "span", text: "Make Void great again!", style: "font-size:110%;"}), _0x131310({type: "hr", style: "border-color: darkred; margin: 3px 0px 3px 0px;"}), this.left = _0x131310({type: "div", class: "half", style: "float:left;"}), this.right = _0x131310({type: "div", class: "half", style: "float:right;"})]), this.right.appendChild(_0x131310({type: "div", text: "Bots online - "}, [this.botOnline = _0x131310({type: "span", text: "null"})])), this.setBotOnline = mekensie => this.botOnline.innerText !== mekensie && (this.botOnline.innerText = mekensie), this.right.appendChild(_0x131310({type: "div", text: "Status - "}, [this.botStatusElement = _0x131310({type: "span"})])), this.setBotStatus = prabjot => this.botStatusElement.innerText !== prabjot && (this.botStatusElement.innerText = prabjot), this.right.appendChild(_0x131310({type: "div", text: "Timer - "}, [this.timerElement = _0x131310({type: "span"})])), this.setTimer = rwanda => rwanda !== this.timerElement.innerText && (this.timerElement.innerText = ~~(rwanda * 100) / 100), this.right.appendChild(_0x131310({type: "div", text: "Time to end - "}, [this.timeToEndElement = _0x131310({type: "span", text: "min-max"})])), this.setTimeToEnd = (danely, waheed) => danely + "-" + waheed + " m." !== this.timeToEndElement.innerText && (this.timeToEndElement.innerText = danely + "-" + waheed + " m."), this.right.appendChild(_0x131310({type: "div", text: "Last pxl - "}, [this.lastPxlElement = _0x131310({type: "span", text: "x y [r,g,b]"})])), this.setLastPxl = (valiente, deantae, nadyne) => valiente + " " + deantae + " [" + nadyne + "]" !== this.lastPxlElement.innerText && (this.lastPxlElement.innerText = valiente + " " + deantae + " [" + nadyne + "]"), this.left.appendChild(_0x131310({type: "div", text: "x - "}, [this.xInput = _0x131310({type: "input", listeners: {input: function () {
          localStorage.lastX = +this.value;
          if (bhakti) bhakti.x1 = +this.value;
        }}})])), this.xInput.value = localStorage.lastX || "", this.left.appendChild(_0x131310({type: "div", text: "y - "}, [this.yInput = _0x131310({type: "input", listeners: {input: function () {
          localStorage.lastY = +this.value;
          if (bhakti) bhakti.y1 = +this.value;
        }}})])), this.yInput.value = localStorage.lastY || "", this.left.appendChild(_0x131310({type: "div", text: "Strategy - "}, [this.strategyElement = _0x131310({type: "select"})])), this.addMode = oakley => {
          let atri = _0x131310({type: "option", text: oakley});
          atri.value = oakley, this.strategyElement.appendChild(atri);
        }, this.left.appendChild(_0x131310({type: "div", text: "Draw clr - "}, [this.coverElement = _0x131310({type: "select"})])), this.addCover = chrisean => {
          let kollette = document.createElement("option");
          kollette.value = kollette.innerText = chrisean, this.coverElement.appendChild(kollette);
        }, this.left.appendChild(this.fileInput = _0x131310({type: "input", style: "background-color:black; border-color:darkRed; color:red;", attributes: {type: "file", style: "width:100%;"}, listeners: {change: function (kix) {
          let audette = new FileReader;
          audette.readAsDataURL(this.files[0]), audette.onload = () => bhakti = kassiani(audette.result);
        }}})), this.left.appendChild(this.switcher = _0x131310({type: "button", text: "on/off"})), this.switcher.addEventListener("click", () => chauntel.timeout === null ? chauntel.restart(0) : chauntel.stop()), document.body.appendChild(this.window);
      };
      avarielle.setBotStatus("stopped");
      function izhane() {
        return sabrenna === null ? 12e4 : 3600 / _0x481648 * sabrenna * 1e3 + 4e4;
      }
      ;
      (function kherrington() {
        fetch("https://voidserv.glitch.me/online", {method: "POST"}).then(yerica => yerica.text()).then(stacyann => {
          avarielle.setBotOnline(sabrenna = +stacyann), setTimeout(kherrington, izhane());
        }).catch(taji => {
          taji == 429 && (sabrenna = null, avarielle.setBotStatus("Server overload"));
          ;
          setTimeout(kherrington, izhane());
        });
      }());
      let clemente = document.querySelector(_0x1d255f.coords), eriyonna = document.querySelector(_0x1d255f.gameCanvas), jadziah = {worldX: null, worldY: null, clientX: null, clientY: null};
      window.addEventListener("mousemove", amei => {
        [jadziah.worldX, jadziah.worldY] = clemente.innerText.match(shelica).map(raiana => +raiana), jadziah.clientX = amei.clientX, jadziah.clientY = amei.clientY;
      });
      let shelica = new RegExp(/-?\d+/g), aveana = new function () {
        let kallina = this;
        this.chunkSize = _0x2ac1ee, this.maxLiveTime = 12e4, this.tiledBorders = {x1: 0, y1: 0, x2: 256, y2: 256, width: 256, height: 256}, this.borders = {x1: -(this.tiledBorders.width * this.chunkSize / 2), y1: -(this.tiledBorders.height * this.chunkSize / 2), x2: this.tiledBorders.width * this.chunkSize / 2, y2: this.tiledBorders.height * this.chunkSize / 2}, this.chunks = {get: function (karolis, shloka) {
          return this[karolis] === undefined || this[karolis][shloka] === undefined ? null : this[karolis][shloka];
        }, set: function (shahbaz, kahir, ivry) {
          return this[shahbaz] === undefined && (this[shahbaz] = {}), kallina.chunkList.push(this[shahbaz][kahir] = new _0x39eb08(shahbaz, kahir, ivry)), this[shahbaz][kahir];
        }, delete: function (raengel, shavonne) {
          if (this[raengel] === undefined || this[raengel][shavonne] === undefined) return;
          this[raengel][shavonne] = undefined;
          for (let dois = 0; dois !== kallina.chunkList.length; dois++) if (kallina.chunkList[dois].x === raengel && kallina.chunkList[dois].y === shavonne) return amecia.deRegisterChunk(kallina.chunkList[dois].x, kallina.chunkList[dois].y), kallina.chunkList.splice(dois, 1);
          ;
        }}, this.chunkList = [], this.canLoad = !![], this.maxLoadWaitTime = 1e3, this.chunkGetTimeout = null, this.clearChunkGetTimeout = () => {
          if (this.chunkGetTimeout !== null) clearTimeout(this.chunkGetTimeout), this.chunkGetTimeout = null, this.canLoad = !![];
        }, this.setChunkGetTimeout = function () {
          this.clearChunkGetTimeout(), this.canLoad = ![], this.chunkGetTimeout = setTimeout(this.clearChunkGetTimeout.bind(this), this.maxLoadWaitTime);
        }, this.garbageCollector = new function () {
          this.interval = null, this.clear = () => {
            let sonni = (new Date).getTime(), zyniya = 0;
            for (let merredith of kallina.chunkList) if (sonni - merredith.lastUsing > kallina.maxLiveTime) kallina.chunks.delete(merredith.x, merredith.y), zyniya++;
            zyniya !== 0 && console.log("[GB] " + zyniya + " chunks collected");
          }, this.start = () => {
            this.stop(), this.interval = setInterval(this.clear.bind(this), 6e4);
          }, this.stop = () => this.interval === null || (clearInterval(this.interval), this.interval = null);
        }, this.absToTiled = (yizza, austan) => [~~((yizza - this.borders.x1) / this.chunkSize), ~~((austan - this.borders.y1) / this.chunkSize)], this.tiledToAbs = (sianne, pamel) => [this.borders.x1 + sianne * this.chunkSize, this.borders.y1 + pamel * this.chunkSize];
        {
          let tiffine;
          this.getPixel = (karlton, aliveya) => {
            return tiffine = this.chunks.get(...this.absToTiled(karlton, aliveya)), tiffine && tiffine.get((karlton - this.borders.x1) % this.chunkSize, (aliveya - this.borders.y1) % this.chunkSize);
          }, this.setPixel = (lillieanne, jesstine, robine) => {
            return tiffine = this.chunks.get(...this.absToTiled(lillieanne, jesstine)), tiffine && tiffine.set((lillieanne - this.borders.x1) % this.chunkSize, (jesstine - this.borders.y1) % this.chunkSize, robine);
          };
        }
        ;
        this.loadChunk = (() => {
          let devrin = new Uint32Array(_0x40176f.length);
          _0x40176f.forEach(([_0x51e7dd, _0x20c8fc, _0x563ed4], romonia) => devrin[romonia] = 4278190080 | _0x563ed4 << 16 | _0x20c8fc << 8 | _0x51e7dd);
          const ylva = tamberly => {
            let oatha = new Uint32Array(tamberly.length);
            for (let amy = 0; amy !== tamberly.length; amy++) oatha[amy] = devrin[tamberly[amy] & 63];
            return oatha;
          };
          function naim(chandice) {
            let debroha = new Uint8ClampedArray(kallina.chunkSize ** 2 << 2), lafrances = new Uint32Array(debroha.buffer), lal = ylva(chandice);
            return lal.forEach((arrietty, leother) => lafrances[leother] = arrietty), debroha;
          }
          ;
          return async function (ebonee, tassia) {
            if (!kallina.canLoad || kallina.chunks.get(ebonee, tassia)) return;
            kallina.setChunkGetTimeout();
            let kambriah = await fetch(location.protocol + "//" + location.host + ("/chunks/0/" + ebonee + "/" + tassia + ".bmp"));
            if (kambriah.ok) {
              let kalahikiola = await kambriah.arrayBuffer(), sayuri;
              if (kalahikiola.byteLength) sayuri = naim(new Uint8Array(kalahikiola)), console.log("Chunk " + ebonee + " " + tassia + " loading"), amecia.registerChunk(ebonee, tassia); else {
                sayuri = new Uint8ClampedArray(kallina.chunkSize ** 2 << 2);
                for (let rayquon = 0; rayquon !== sayuri.length; rayquon += 4) [sayuri[rayquon], sayuri[rayquon + 1], sayuri[rayquon + 2], sayuri[rayquon + 3]] = [..._0x40176f[0], 255];
                console.log("Empty answer " + ebonee + " " + tassia);
              }
              ;
              kallina.chunks.set(ebonee, tassia, sayuri), kallina.clearChunkGetTimeout();
            } else throw new Error("Network response was not ok.");
          };
        })();
      };
      aveana.garbageCollector.start();
      let primm = new function () {
        this.time = 0, setInterval(() => {
          if (isNaN(this.time)) this.time = 0;
          --this.time < 0 && (this.time = 0), avarielle.setTimer(this.time);
        }, 1e3), this.getTime = () => this.time, this.canPlace = () => this.time < 52;
      }, bhakti = localStorage.lastTmpURL ? kassiani(localStorage.lastTmpURL) : null;
      const layane = sumeyye => [bhakti.data[sumeyye], bhakti.data[sumeyye + 1], bhakti.data[sumeyye + 2], bhakti.data[sumeyye + 3]];
      ;
      (() => {
        let eslyn;
        getPxlInTemplate = (dyane, kasidi) => {
          return eslyn = dyane + kasidi * bhakti.width << 2, [bhakti.data[eslyn], bhakti.data[eslyn | 1], bhakti.data[eslyn | 2], bhakti.data[eslyn | 3]];
        };
      })();
      function momar() {
        if (!chauntel.imageProcessor) chauntel.imageProcessor = new _0x2d7fa2;
        chauntel.imageProcessor.setTemplate(bhakti);
      }
      ;
      function kassiani(zavayah) {
        localStorage.lastTmpURL = zavayah;
        let kyrell = new _0x725102({name: "void", x: +avarielle.xInput.value, y: +avarielle.yInput.value, src: zavayah});
        return kyrell.load().then(function () {
          kyrell.convert(_0x49d72a), momar.apply(this, arguments);
        }), kyrell;
      }
      ;
      let chauntel = new function () {
        let demeatrius = this;
        this.availableMods = ["random", "woyken", "linear", "center", "chess"], this.setMode = function (preslyn) {
          this.availableMods.includes(preslyn) ? this.log("New mode - " + (this._mode = preslyn)) : this.warn("Mode doesn't exist");
        }, this.getMode = function () {
          return this._mode;
        }, this._mode = localStorage.modeBot || "random", this.availableCovers = ["all", "selected"], this.setCover = function (preston) {
          if (this.availableCovers.includes(preston)) this._cover = preston; else this.warn("Cover doesn't exist");
        }, this.getCover = function () {
          return this._cover;
        }, this._cover = localStorage.coverBot || "all", this.x = null, this.y = null, this.settedPxls = 0, this.chunkLoading = ![], this.log = (..._0x5a65ac) => _0x5a65ac.forEach(jeb => console.log("[VB] " + jeb)), this.warn = (..._0x31cd44) => _0x31cd44.forEach(stiven => console.warn("[VB] " + stiven)), this.zone = {getPixelArea: function (jekori, ahlyvia, jolicia, haleigh) {
          let jakenzie = new Uint8ClampedArray(jolicia * haleigh << 2), dake, safa = 0, rodrick = 0, chere;
          demeatrius.chunkLoading = ![];
          for (; safa !== haleigh; safa++) {
            for (dake = 0; dake !== jolicia; dake++, rodrick += 4) {
              chere = aveana.getPixel(dake + jekori, safa + ahlyvia);
              chere ? (jakenzie[rodrick] = chere[0], jakenzie[rodrick + 1] = chere[1], jakenzie[rodrick + 2] = chere[2], jakenzie[rodrick + 3] = 255) : (demeatrius.chunkLoading = !![], aveana.loadChunk(...aveana.absToTiled(dake + jekori, safa + ahlyvia)));
              ;
            }
            ;
          }
          ;
          if (demeatrius.chunkLoading) return null;
          return jakenzie;
        }, get: function (morine, brooklynmarie) {
          let josejulian = morine + brooklynmarie * this.width << 2;
          return [this.data[josejulian], this.data[josejulian + 1], this.data[josejulian + 2], this.data[josejulian + 3]];
        }, getData: function (doraine) {
          return [this.data[doraine], this.data[doraine + 1], this.data[doraine + 2], this.data[doraine + 3]];
        }, override: function () {
          if (this.xStart === null || this.yStart === null || this.width === null || this.height === null) demeatrius.log("Problems with bot.zone");
          this.data = this.getPixelArea(this.xStart, this.yStart, this.width, this.height);
        }, xStart: null, yStart: null, width: null, height: null, xEnd: null, yEnd: null, data: [], pixelsToSet: [], targets: [], lastPxl: [null, null], dist: (carrera, samier, nesbitt, racheal) => (carrera - nesbitt) ** 2 + (samier - racheal) ** 2}, this.getTimeout = () => {
          return primm.canPlace() ? _0xdfd7af(_0x328cda * .1000000000003638, _0x328cda * .19999999999998863) : primm.getTime() * _0xdfd7af(250, 600);
        }, this.cycle = function () {
          if (!primm.canPlace()) return this.log("Wait for timer"), this.restart();
          ;
          let soana = performance.now(), namon = null, trifon = [];
          if (bhakti) {
            this.zone.xStart = bhakti.x1, this.zone.yStart = bhakti.y1, this.zone.width = bhakti.width, this.zone.height = bhakti.height, this.zone.xEnd = this.zone.xStart + this.zone.width, this.zone.yEnd = this.zone.yStart + this.zone.height, this.zone.override();
            if (this.chunkLoading) return avarielle.setBotStatus("load ch"), this.restart(500);
            ;
          } else return this.log("no tmp"), avarielle.setBotStatus("need tmp"), this.restart(500);
          ;
          let kyda = this.botting();
          switch (kyda) {
            case "build":
              this.settedPxls++, avarielle.setBotStatus("build"), this.restart();
              break;
            case "done":
              this.log("Done"), avarielle.setBotStatus("done"), this.restart(_0xdfd7af(2e3, 4e3), _0x2d81a7);
              break;
            default:
              avarielle.setBotStatus("exception"), this.restart(_0xdfd7af(2e3, 4e3), _0x2d81a7);
          }
          ;
        }, this.botting = function () {
          let natalyia;
          if (this.getCover() === "all") natalyia = () => !![]; else {
            if (this.getCover() === "selected") {
              let naveigh = document.querySelector(".selected").style.backgroundColor.match(shelica).map(jolly => +jolly);
              natalyia = gerardina => _0x49d72a.same(gerardina, naveigh);
            }
          }
          ;
          const leigh = orley => {
            let kaylin, remley, brettany = 0;
            for (remley = 0; remley !== this.zone.height; remley++) for (kaylin = 0; kaylin !== this.zone.width; kaylin++, brettany += 4) orley(kaylin, remley, brettany);
          };
          if (this.getMode() === "random") {
            let talaija = [], analyah;
            leigh((sharalyn, zoraida, raelena) => {
              analyah = layane(raelena);
              if (analyah !== null && analyah[3] !== 0 && natalyia(analyah) && !_0x49d72a.same(this.zone.getData(raelena), analyah)) talaija.push([sharalyn, zoraida, _0x49d72a.RGBToId(analyah)]);
            }), avarielle.setTimeToEnd(Math.round((talaija.length << 2) / 6) / 10, Math.round(talaija.length * 7 / 6) / 10);
            if (talaija.length) return xy = talaija[_0xdfd7af(0, talaija.length - 1)], xy[0] += bhakti.x1, xy[1] += bhakti.y1, amecia.setPixel(...xy), "build"; else return "done";
          } else {
            if (this.getMode() === "linear") {
              let raymond, azeria, daralee = 0, grant, naydean = null, jadon = 0;
              leigh((geanie, shiree, bohdi) => {
                grant = layane(bohdi);
                grant !== null && grant[3] !== 0 && natalyia(grant) && !_0x49d72a.same(this.zone.getData(bohdi), grant) && (jadon++, naydean === null && (naydean = [geanie + bhakti.x1, shiree + bhakti.y1, _0x49d72a.RGBToId(grant)]));
                ;
              }), avarielle.setTimeToEnd(Math.round((jadon << 2) / 6) / 10, Math.round(jadon * 7 / 6) / 10);
              if (naydean) return amecia.setPixel(...naydean), "build"; else return "done";
              return this.restart();
            } else {
              if (this.getMode() === "center") {
                let elizabete = [], goodwin = bhakti.width / 2, morgun = bhakti.height / 2;
                const sadio = ([_0x32f165, _0x3d090f]) => ((_0x32f165 - goodwin) ** 2 + (_0x3d090f - morgun) ** 2) ** .5;
                let twania, altee, elzie = Infinity, pippi = 0;
                leigh((aftab, javelle, nancilee) => {
                  twania = layane(nancilee);
                  if (twania !== null && twania[3] !== 0 && natalyia(twania) && !_0x49d72a.same(this.zone.getData(nancilee), twania)) {
                    pippi++, altee = sadio([aftab, javelle]);
                    if (elzie > altee + .8999999999996362) elzie = altee, elizabete = [[aftab, javelle, _0x49d72a.RGBToId(twania)]]; else elzie === altee && elizabete.push([aftab, javelle, _0x49d72a.RGBToId(twania)]);
                    ;
                  }
                  ;
                }), avarielle.setTimeToEnd(Math.round((pippi << 2) / 6) / 10, Math.round(pippi * 7 / 6) / 10);
                if (elizabete.length) return xy = elizabete[_0xdfd7af(0, elizabete.length - 1)], xy[0] += bhakti.x1, xy[1] += bhakti.y1, amecia.setPixel(...xy), "build"; else return "done";
              } else {
                if (this.getMode() === "chess") {
                  let josiahs, ashwin, earleane, shineka, davell = !![], tomothy = 0, chasitity = null;
                  for (shineka = 0; shineka !== 2; shineka++) {
                    davell = shineka === 0;
                    for (ashwin = 0; ashwin !== this.zone.height; ashwin++) {
                      davell = !davell;
                      for (josiahs = +davell; josiahs < this.zone.width; josiahs += 2) {
                        earleane = getPxlInTemplate(josiahs, ashwin);
                        earleane !== null && earleane[3] !== 0 && natalyia(earleane) && !_0x49d72a.same(earleane, this.zone.get(josiahs, ashwin)) && (tomothy++, chasitity === null && (chasitity = [josiahs + bhakti.x1, ashwin + bhakti.y1, _0x49d72a.RGBToId(earleane)]));
                        ;
                      }
                      ;
                    }
                    ;
                  }
                  ;
                  avarielle.setTimeToEnd(Math.round((tomothy << 2) / 6) / 10, Math.round(tomothy * 7 / 6) / 10);
                  if (chasitity) return amecia.setPixel(...chasitity), "build"; else return "done";
                } else {
                  if (this.getMode() === "woyken") {
                    let syleste = this.imageProcessor.getTargets().filter(([_0x123181, _0x27c6a2, _0x79a57c]) => !_0x49d72a.same(this.zone.get(_0x123181, _0x27c6a2), _0x79a57c));
                    if (syleste.length) {
                      const kelecia = syleste.pop();
                      return amecia.setPixel(kelecia[0] + bhakti.x1, kelecia[1] + bhakti.y1, _0x49d72a.RGBToId(kelecia[2])), "build";
                    } else return "done";
                  } else this.log("Undef mode");
                }
              }
            }
          }
        }, this.timeout = null, this.clearTimeout = function () {
          this.timeout !== null && (clearTimeout(this.timeout), this.timeout = null);
        }, this.stop = function () {
          this.clearTimeout(), this.log("Stop"), avarielle.setBotStatus("stopped");
        }, this.restart = function (_0x57f87c = this.getTimeout()) {
          this.clearTimeout(), this.timeout = setTimeout(() => this.cycle(), _0x57f87c), this.log("R " + _0x57f87c);
        };
      };
      avarielle.strategyElement.addEventListener("change", shadin => chauntel.setMode(localStorage.modeBot = shadin.target.value)), chauntel.availableMods.forEach(jungwoo => avarielle.addMode(jungwoo)), avarielle.strategyElement.childNodes.forEach(lanicka => lanicka.value === chauntel._mode && lanicka.setAttribute("selected", "")), avarielle.coverElement.addEventListener("change", tierni => chauntel.setCover(localStorage.coverBot = tierni.target.value)), chauntel.availableCovers.forEach(rakel => avarielle.addCover(rakel)), avarielle.coverElement.childNodes.forEach(leca => leca.value === chauntel._cover && leca.setAttribute("selected", "")), window.addEventListener("keydown", ({keyCode: _0xc16ffd}) => {
        switch (_0xc16ffd) {
          case 66:
            chauntel.timeout === null ? chauntel.restart(0) : chauntel.stop();
            break;
          case 78:
            let [_0x697166, _0x1861f4] = clemente.innerText.match(shelica).map(soli => +soli);
            avarielle.xInput.value = localStorage.lastX = _0x697166, avarielle.yInput.value = localStorage.lastY = _0x1861f4;
            bhakti && (bhakti.x1 = _0x697166, bhakti.y1 = _0x1861f4);
            break;
          default:
            console.log(_0xc16ffd);
        }
        ;
      });
      function viya() {
        let nyarie, ihan, marivic, jamariana, zabelle = zeynep();
        return nyarie = ~~(jadziah.worldX - jadziah.clientX / zabelle + 1), ihan = ~~(jadziah.worldY - jadziah.clientY / zabelle + 1), marivic = ~~(jadziah.worldX + (eriyonna.width - jadziah.clientX) / zabelle - 1), jamariana = ~~(jadziah.worldY + (eriyonna.height - jadziah.clientY) / zabelle - 1), [nyarie, ihan, marivic, jamariana];
      }
      ;
      function zeynep() {
        let claribel = +window.location.hash.match(shelica)[2];
        return claribel > 10 ? (claribel / 10) ** 2 : claribel ** .09999999999990905 || 1;
      }
      ;
      ;
      Array.from(document.body.getElementsByTagName("script")).forEach(caelee => {
        caelee.hasAttribute("src") && document.body.removeChild(caelee);
      });
    }.call(this, ellee("buffer").Buffer));
  }, {"./resources/canvas": 3, "./resources/constants": 4, "./resources/selectors.json": 5, "./resources/style": 6, "./utils/Chunk": 7, "./utils/ImageProcessor": 8, "./utils/Palette": 9, "./utils/Template": 10, "./utils/functions": 11, buffer: 13}], 2: [function (chamberlain, shamill, idora) {
    (function (alexis) {
      "use strict";
      function dabria(charlsa) {
        if (!(this instanceof dabria)) return new dabria(charlsa);
        var shareika = charlsa.width, cidnie = charlsa.height, chinmay = [[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]], anazia = [[-1, -2, -1], [0, 0, 0], [1, 2, 1]], welsey = [], derward = [];
        function adalbert(chinonso) {
          return function (success, rhyane, eylem) {
            return eylem = eylem || 0, chinonso[(shareika * rhyane + success) * 4 + eylem];
          };
        }
        var solomone = charlsa.data, yenifer = adalbert(solomone), aviraj, venica;
        for (venica = 0; venica < cidnie; venica++) {
          for (aviraj = 0; aviraj < shareika; aviraj++) {
            var eliannys = yenifer(aviraj, venica, 0), samrath = yenifer(aviraj, venica, 1), coralina = yenifer(aviraj, venica, 2), lauryne = (eliannys + samrath + coralina) / 3;
            derward.push(lauryne, lauryne, lauryne, 255);
          }
        }
        yenifer = adalbert(derward);
        for (venica = 0; venica < cidnie; venica++) {
          for (aviraj = 0; aviraj < shareika; aviraj++) {
            var coleton = chinmay[0][0] * yenifer(aviraj - 1, venica - 1) + chinmay[0][1] * yenifer(aviraj, venica - 1) + chinmay[0][2] * yenifer(aviraj + 1, venica - 1) + chinmay[1][0] * yenifer(aviraj - 1, venica) + chinmay[1][1] * yenifer(aviraj, venica) + chinmay[1][2] * yenifer(aviraj + 1, venica) + chinmay[2][0] * yenifer(aviraj - 1, venica + 1) + chinmay[2][1] * yenifer(aviraj, venica + 1) + chinmay[2][2] * yenifer(aviraj + 1, venica + 1), kasie = anazia[0][0] * yenifer(aviraj - 1, venica - 1) + anazia[0][1] * yenifer(aviraj, venica - 1) + anazia[0][2] * yenifer(aviraj + 1, venica - 1) + anazia[1][0] * yenifer(aviraj - 1, venica) + anazia[1][1] * yenifer(aviraj, venica) + anazia[1][2] * yenifer(aviraj + 1, venica) + anazia[2][0] * yenifer(aviraj - 1, venica + 1) + anazia[2][1] * yenifer(aviraj, venica + 1) + anazia[2][2] * yenifer(aviraj + 1, venica + 1), corutney = Math.sqrt(coleton * coleton + kasie * kasie) >>> 0;
            welsey.push(corutney, corutney, corutney, 255);
          }
        }
        var alicja = welsey;
        return typeof Uint8ClampedArray === "function" && (alicja = new Uint8ClampedArray(welsey)), alicja.toImageData = function () {
          return dabria.toImageData(alicja, shareika, cidnie);
        }, alicja;
      }
      dabria.toImageData = function lennia(yanielis, omeda, laeken) {
        if (typeof ImageData === "function" && Object.prototype.toString.call(yanielis) === "[object Uint16Array]") return new ImageData(yanielis, omeda, laeken); else {
          if (typeof window === "object" && typeof window.document === "object") {
            var ryou = document.createElement("canvas");
            if (typeof ryou.getContext === "function") {
              var radin = ryou.getContext("2d"), mcadoo = radin.createImageData(omeda, laeken);
              return mcadoo.data.set(yanielis), mcadoo;
            } else return new jhenifer(yanielis, omeda, laeken);
          } else return new jhenifer(yanielis, omeda, laeken);
        }
      };
      function jhenifer(bridge, aquera, drayten) {
        return {width: aquera, height: drayten, data: bridge};
      }
      if (typeof idora !== "undefined") typeof shamill !== "undefined" && shamill.exports && (idora = shamill.exports = dabria), idora.Sobel = dabria; else typeof define === "function" && define.amd ? define([], function () {
        return dabria;
      }) : alexis.Sobel = dabria;
    }(this));
  }, {}], 3: [function (abaigeal, labaron, ciannah) {
    labaron.exports = {CHUNK_SIZE: 256, COLORS: [[202, 227, 255], [255, 255, 255], [255, 255, 255], [228, 228, 228], [196, 196, 196], [136, 136, 136], [78, 78, 78], [0, 0, 0], [244, 179, 174], [255, 167, 209], [255, 84, 178], [255, 101, 101], [229, 0, 0], [154, 0, 0], [254, 164, 96], [229, 149, 0], [160, 106, 66], [96, 64, 40], [245, 223, 176], [255, 248, 137], [229, 217, 0], [148, 224, 68], [2, 190, 1], [104, 131, 56], [0, 101, 19], [202, 227, 255], [0, 211, 221], [0, 131, 199], [0, 0, 234], [25, 25, 115], [207, 110, 228], [130, 0, 128]]};
  }, {}], 4: [function (larce, iyeshia, kamiyra) {
    iyeshia.exports = {MAX_REQUESTS_PER_HOUR: 4e3, PXL_CB: 2e3, MAX_TIME_STACK: 6e4};
  }, {}], 5: [function (jaggyr, monserat, analu) {
    monserat.exports = {selectedColor: ".selected", coords: ".coorbox", palettebox: "#palettebox", gameCanvas: ".viewport"};
  }, {}], 6: [function (jilla, rosanell, metha) {
    rosanell.exports = "\n    #void-bot {\n        background-color: black; color: red; padding: 3px; position: absolute; top: 2%; right: 2%; width: 40%; font-weight: bold;\n    }\n    #void-bot input{\n        background-color: black; color: red; border-color: darkred; width: 60px;\n    }\n    #void-bot select{\n        background-color: black; color: red; border-color: darkred; font: inherit;\n    }\n    #void-bot button{\n        background-color: black; color: red; border-color: darkred; font: inherit; margin: 5px;\n    }\n    #void-bot .half{\n        width: calc(50% - 5px); margin-left:5px;\n    }\n";
  }, {}], 7: [function (elionna, alique, jamaca) {
    const {CHUNK_SIZE: _0x5588fb} = elionna("../resources/canvas.json");
    alique.exports = class {
      constructor(_0x2a5036, _0x191489, _0x5c9b44) {
        this.x = _0x2a5036, this.y = _0x191489, this.data = _0x5c9b44, this.lastUsing = Date.now(), this._c = null;
      }
      ["get"](_0x2ede65, _0x29eba3) {
        return this._c = _0x2ede65 + _0x29eba3 * _0x5588fb << 2, [this.data[this._c], this.data[this._c + 1], this.data[this._c + 2]];
      }
      ["set"](_0x409805, _0x3ad758, _0x557e6b) {
        return this._c = _0x409805 + _0x3ad758 * _0x5588fb << 2, [this.data[this._c], this.data[this._c + 1], this.data[this._c + 2]] = [..._0x557e6b];
      }
    };
  }, {"../resources/canvas.json": 3}], 8: [function (hairo, takhi, teshana) {
    const venkat = hairo("sobel"), {abs: _0x3f025e, floor: _0x3e9e7a, sqrt: _0x5ef143, min: _0x5bb443} = Math, _0x145a79 = jden => {
      let zaleena = new Uint8ClampedArray(jden.length);
      for (let antwonette = 0; antwonette !== jden.length; antwonette++) zaleena[antwonette] = jden[antwonette];
      return zaleena;
    };
    takhi.exports = class _0x46ba44 {
      constructor() {
        this.template = null, this.origTemplate = null, this.targets = null, this.currentMode = null, this.MODES = {LINEAR: 0, RANDOM: 1, WOYKEN: 2};
      }
      ["_shuffle"](_0x5d5b15) {
        var shmuel = _0x5d5b15.length, evanie, zeila;
        while (0 !== shmuel) {
          zeila = Math.floor(Math.random() * shmuel), shmuel -= 1, evanie = _0x5d5b15[shmuel], _0x5d5b15[shmuel] = _0x5d5b15[zeila], _0x5d5b15[zeila] = evanie;
        }
        return _0x5d5b15;
      }
      ["setTemplate"](_0x33a632) {
        this.origTemplate = _0x33a632, this.template = {width: _0x33a632.width, height: _0x33a632.height, data: _0x145a79(_0x33a632.data)}, this.sobelData = venkat(this.origTemplate.ctx.getImageData(0, 0, this.template.width, this.template.height)).toImageData().data, this.targets = null;
      }
      ["_getIncrementalEdges"](_0x596e22, _0x66a5f4) {
        const dulan = [];
        let marciana, ymelda, chaquita, guerino, aashriya, cybill;
        for (let keelah = 0; keelah !== this.template.height; keelah++) {
          ymelda = this.template.width * keelah;
          for (let eliott = 0; eliott !== this.template.width; eliott++) {
            marciana = ymelda + eliott << 2, chaquita = this.sobelData[marciana], guerino = this.sobelData[marciana | 1], aashriya = this.sobelData[marciana | 2], cybill = this.template.data[marciana | 3];
            if (cybill !== 255) continue;
            guerino >= _0x596e22 && guerino <= _0x66a5f4 && dulan.push({x: eliott, y: keelah});
          }
        }
        return dulan;
      }
      ["_createTargets"](_0x7a37fc) {
        const tinaya = _0x3e9e7a(this.template.width / 2), sophira = _0x3e9e7a(this.template.height / 2), lynken = 20;
        let lajoya, neldon;
        const damiean = jaydel => (jaydel.x - tinaya) ** 2 + (jaydel.y - sophira) ** 2, donte = envee => {
          let anousheh = [], kiylee = [];
          for (let wassillie = 0; wassillie !== envee.length; wassillie++) {
            (envee[wassillie].x + envee[wassillie].y) % lynken === 0 || _0x3f025e(envee[wassillie].x - envee[wassillie].y) % lynken === 0 ? kiylee.push(envee[wassillie]) : anousheh.push(envee[wassillie]);
          }
          return {grid: kiylee, other: anousheh};
        }, kaare = quetzalcoatl => {
          quetzalcoatl = [...quetzalcoatl];
          let ashlley = [];
          const marybelle = () => {
            let shamesha = 0, lajeanne = damiean(quetzalcoatl[0]), deilany, moiz;
            for (let whisper = 0; whisper !== quetzalcoatl.length; whisper++) {
              deilany = damiean(quetzalcoatl[whisper]);
              if (deilany < lajeanne) {
                lajeanne = deilany, shamesha = whisper;
                if (deilany === 0) break;
              }
            }
            return quetzalcoatl.splice(shamesha, 1)[0];
          };
          while (quetzalcoatl.length) ashlley.push(marybelle());
          return ashlley;
        };
        this.layers = [];
        for (let oksanna = 0; oksanna !== 256; oksanna++) {
          let {grid: _0x2838a9, other: _0x154808} = donte(this._getIncrementalEdges(oksanna, oksanna));
          _0x2838a9 = kaare(_0x2838a9), _0x154808 = kaare(_0x154808), this.layers[oksanna] = [], _0x154808.forEach(atzhiri => this.layers[oksanna].push(atzhiri)), _0x2838a9.forEach(francina => this.layers[oksanna].push(francina));
        }
        this.targets = [], this.layers.forEach(ivars => ivars.forEach(mayeli => this.targets.push(mayeli)));
        let abdelhadi;
        this.targets = this.targets.map(({x: _0x331ee9, y: _0x3f7e33}) => {
          return abdelhadi = _0x331ee9 + _0x3f7e33 * this.template.width << 2, [_0x331ee9, _0x3f7e33, [this.template.data[abdelhadi], this.template.data[abdelhadi | 1], this.template.data[abdelhadi | 2]]];
        });
      }
      ["setMode"](_0x4a0d18) {
        this.currentMode = _0x4a0d18;
      }
      ["getTargets"]() {
        if (!this.targets) this._createTargets();
        return this.targets;
      }
    };
  }, {sobel: 2}], 9: [function (virgus, ediany, trysten) {
    const {abs: _0x3a026c} = virgus("./functions");
    ediany.exports = class {
      constructor() {
        this.elems = null, this.colors = null;
      }
      ["setColors"](_0x30f6b1) {
        this.colors = _0x30f6b1.map(fabien => [...fabien]);
      }
      ["same"](_0x560a8d, _0x56ce2a, _0x4bd5d3 = 15) {
        return _0x3a026c(_0x560a8d[0] - _0x56ce2a[0]) < _0x4bd5d3 && _0x3a026c(_0x560a8d[1] - _0x56ce2a[1]) < _0x4bd5d3 && _0x3a026c(_0x560a8d[2] - _0x56ce2a[2]) < _0x4bd5d3;
      }
      ["has"](_0x6be923) {
        return this.RGBToId(_0x6be923) !== null;
      }
      ["convert"](_0x578d35) {
        let ambria, kathalia = Infinity, damato, ilani;
        for (let hassanatou = 2; hassanatou !== this.colors.length; hassanatou++) {
          ilani = this.colors[hassanatou];
          if (this.same(ilani, _0x578d35)) return ilani;
          ;
          damato = _0x3a026c(ilani[0] - _0x578d35[0]) + _0x3a026c(ilani[1] - _0x578d35[1]) + _0x3a026c(ilani[2] - _0x578d35[2]);
          damato < kathalia && (kathalia = damato, ambria = hassanatou);
          ;
        }
        ;
        return [...this.colors[ambria]];
      }
      ["IdToRGB"](_0xd6ecae) {
        return this.colors[_0xd6ecae];
      }
      ["RGBToId"](_0x2bec9d) {
        for (let ayten = this.colors.length - 1; ayten !== -1; ayten--) if (this.same(this.colors[ayten], _0x2bec9d)) return ayten;
        return null;
      }
      ["select"](_0xf90347) {
        this.elems[typeof _0xf90347 === "object" ? this.RGBToId(_0xf90347) : _0xf90347].click();
      }
      ["onColorSelect"]() {}
      ["bindColorsWithElements"](_0x417072) {
        _0x417072 = Array.from(_0x417072), this.elems = {}, this.colors.forEach((graelyn, cobain) => {
          let tylayshia = _0x417072.find(hydee => this.same(graelyn, hydee.style.backgroundColor.match(/-?\d+/g).map(selicia => +selicia)));
          if (tylayshia === void 0) return console.error("Can't find element for color [" + graelyn + "]");
          this.elems[cobain] = tylayshia, this.elems[cobain].addEventListener("click", () => this.onColorSelect({id: cobain, rgb: graelyn}));
        });
      }
    };
  }, {"./functions": 11}], 10: [function (tyaria, rasheena, jerrold) {
    const {loadImage: _0x2e2b4f} = tyaria("./functions");
    class _0x4bcc76 {
      constructor({x: _0x379082, y: _0x3c6c5c, width: _0x204f18, height: _0x236ed9, name: _0x30c966, src: _0x4b98d8}) {
        this.x1 = _0x379082, this.y1 = _0x3c6c5c, this.width = _0x204f18, this.height = _0x236ed9, this.overrideEnds(), this.name = _0x30c966, this.src = _0x4b98d8, this.status = _0x4bcc76.UNLOADED, this.img = null, this.canvas = null;
      }
      ["intersects"](_0x54548c, _0x34ba2b, _0x2309f3, _0x1e60fb) {
        return this.x1 < _0x2309f3 && this.x2 > _0x54548c && this.y1 < _0x1e60fb && this.y2 > _0x34ba2b;
      }
      ["overrideEnds"]() {
        this.x2 = this.x1 + this.width, this.y2 = this.y1 + this.height;
      }
      ["load"]() {
        return this.status = _0x4bcc76.LOADING, new Promise((angeluis, freeda) => {
          if (this.src === null) return console.error("Template src isn't defined"), freeda();
          ;
          _0x2e2b4f(this.src).then(lenci => {
            this.img = lenci, this.canvas = document.createElement("canvas"), this.width = this.canvas.width = this.img.width, this.height = this.canvas.height = this.img.height, this.overrideEnds(), this.ctx = this.canvas.getContext("2d"), this.ctx.drawImage(this.img, 0, 0), this.imageData = this.ctx.getImageData(0, 0, this.width, this.height), this.data = this.imageData.data, this.status = _0x4bcc76.LOADED, angeluis(this);
          }).catch(leith => freeda(leith));
        });
      }
      ["convert"](_0x5afc22) {
        let michaelallen;
        for (michaelallen = 0; michaelallen !== this.data.length; michaelallen += 4) {
          if (this.data[michaelallen + 3] === 0) continue;
          [this.data[michaelallen], this.data[michaelallen + 1], this.data[michaelallen + 2]] = _0x5afc22.convert([this.data[michaelallen], this.data[michaelallen + 1], this.data[michaelallen + 2]]);
        }
        ;
        this.ctx.putImageData(this.imageData, 0, 0);
      }
    }
    ;
    _0x4bcc76.UNLOADED = 0, _0x4bcc76.LOADING = 1, _0x4bcc76.LOADED = 2, rasheena.exports = _0x4bcc76;
  }, {"./functions": 11}], 11: [function (janee, silvanus, bryttany) {
    ;
    let {abs: _0x1f152b} = Math;
    function pieper(shalay, emonnie) {
      shalay.mozImageSmoothingEnabled = shalay.webkitImageSmoothingEnabled = shalay.msImageSmoothingEnabled = shalay.imageSmoothingEnabled = emonnie;
    }
    ;
    function williemae(treyton, vamir) {
      Object.keys(treyton).forEach(mahagony => vamir(treyton[mahagony], mahagony));
    }
    ;
    function xsavier(kealana) {
      document.head.appendChild(tomes({type: "style", html: kealana}));
    }
    ;
    function shahir(haoyu, jdin) {
      if (!("Notification" in window)) return;
      const rhonald = () => new Notification(haoyu, jdin);
      if (Notification.permission === "granted") rhonald(); else Notification.permission !== "denied" && Notification.requestPermission(royetta => {
        if (royetta === "granted") rhonald();
      });
      ;
    }
    ;
    function tomes(ean, _0xded741 = []) {
      let elorie = ean.type === "text" ? document.createTextNode(ean.text || "") : document.createElement(ean.type);
      return ean.id && (elorie.id = ean.id), ean.class && elorie.setAttribute("class", ean.class), ean.style && (elorie.style = ean.style), ean.html ? elorie.innerHTML = ean.html : ean.text && (elorie.innerText = ean.text), ean.listeners && williemae(ean.listeners, (sharlin, manuia) => {
        elorie.addEventListener(manuia.startsWith("on") ? manuia.substring(2) : manuia, sharlin);
      }), ean.attributes && williemae(ean.attributes, (mcclellan, rhondia) => elorie.setAttribute(rhondia, mcclellan)), _0xded741.length && williemae(_0xded741, elorie.appendChild.bind(elorie)), elorie;
    }
    ;
    function meryah(eline) {
      return eline ? "On" : "Off";
    }
    ;
    function adasyn(vickilynn, _0x2b221c = void 0) {
      let tytanna = document.createElement("a");
      tytanna.href = vickilynn.toDataURL("image/png"), tytanna.download = _0x2b221c, tytanna.click();
    }
    ;
    ;
    function twaniqua(katurah) {
      return new Promise((osnas, niasia) => {
        let ciarra = new Image;
        ciarra.crossOrigin = "", ciarra.onload = () => osnas(ciarra), ciarra.onerror = niasia, ciarra.src = katurah;
      });
    }
    ;
    ;
    function lauralai() {
      let noval = ![];
      try {
        noval = window != window.top || document != top.document || self.location != top.location;
      } catch (theodorejames) {
        noval = !![];
      }
      ;
      return noval;
    }
    ;
    ;
    function brittanee(vonnita, jennea, yarielys) {
      let tywain = document.createElement("canvas"), maddilyn = tywain.getContext("2d");
      tywain.width = jennea, tywain.height = yarielys;
      let rizelle = maddilyn.getImageData(0, 0, jennea, yarielys);
      for (let lamarcus = 0; lamarcus !== vonnita.length; lamarcus++) rizelle.data[lamarcus] = vonnita[lamarcus];
      return maddilyn.putImageData(rizelle, 0, 0), tywain;
    }
    ;
    ;
    silvanus.exports = {between: _0xd9c74b, abs: _0x1f152b, antialiasing: pieper, objForEach: williemae, injectCSS: xsavier, trySendNotification: shahir, factory: tomes, switcherText: meryah, downloadCanvas: adasyn, $: _0x47a5eb, loadImage: twaniqua, createPanelButton: _0x4cc398, isFrame: lauralai, loadWASM: _0x49d82f, createCanvasFromData: brittanee, rand: _0xfe89d6};
  }, {}], 12: [function (demetirus, phillipa, mele) {
    "use strict";
    mele.byteLength = benjy, mele.toByteArray = yashia, mele.fromByteArray = bose;
    var sebashtian = [], arienne = [], arda = typeof Uint8Array !== "undefined" ? Uint8Array : Array, lequentin = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (var eleora = 0, aubriauna = lequentin.length; eleora < aubriauna; ++eleora) {
      sebashtian[eleora] = lequentin[eleora], arienne[lequentin.charCodeAt(eleora)] = eleora;
    }
    arienne["-".charCodeAt(0)] = 62, arienne["_".charCodeAt(0)] = 63;
    function jameah(kristella) {
      var alexandros = kristella.length;
      if (alexandros % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
      var kailash = kristella.indexOf("=");
      if (kailash === -1) kailash = alexandros;
      var ellsa = kailash === alexandros ? 0 : 4 - kailash % 4;
      return [kailash, ellsa];
    }
    function benjy(macintyre) {
      var jamecca = jameah(macintyre), laketa = jamecca[0], chiagoziem = jamecca[1];
      return (laketa + chiagoziem) * 3 / 4 - chiagoziem;
    }
    function yashia(aaleia) {
      var yairi, oluwamayowa = jameah(aaleia), tyniesha = oluwamayowa[0], demaurio = oluwamayowa[1], darriana = new arda((tyniesha + demaurio) * 3 / 4 - demaurio), jelanie = 0, mavrik = demaurio > 0 ? tyniesha - 4 : tyniesha, layann;
      for (layann = 0; layann < mavrik; layann += 4) {
        yairi = arienne[aaleia.charCodeAt(layann)] << 18 | arienne[aaleia.charCodeAt(layann + 1)] << 12 | arienne[aaleia.charCodeAt(layann + 2)] << 6 | arienne[aaleia.charCodeAt(layann + 3)], darriana[jelanie++] = yairi >> 16 & 255, darriana[jelanie++] = yairi >> 8 & 255, darriana[jelanie++] = yairi & 255;
      }
      return demaurio === 2 && (yairi = arienne[aaleia.charCodeAt(layann)] << 2 | arienne[aaleia.charCodeAt(layann + 1)] >> 4, darriana[jelanie++] = yairi & 255), demaurio === 1 && (yairi = arienne[aaleia.charCodeAt(layann)] << 10 | arienne[aaleia.charCodeAt(layann + 1)] << 4 | arienne[aaleia.charCodeAt(layann + 2)] >> 2, darriana[jelanie++] = yairi >> 8 & 255, darriana[jelanie++] = yairi & 255), darriana;
    }
    function alainie(rynisha, berdia, hendricks) {
      var myleesha, davonte = [];
      for (var beatriz = berdia; beatriz < hendricks; beatriz += 3) {
        myleesha = (rynisha[beatriz] << 16 & 16711680) + (rynisha[beatriz + 1] << 8 & 65280) + (rynisha[beatriz + 2] & 255), davonte.push(sebashtian[myleesha >> 18 & 63] + sebashtian[myleesha >> 12 & 63] + sebashtian[myleesha >> 6 & 63] + sebashtian[myleesha & 63]);
      }
      return davonte.join("");
    }
    function bose(orum) {
      var moani, parneet = orum.length, rexanne = parneet % 3, tyshelle = [], nixon = 16383;
      for (var shakeeka = 0, thadd = parneet - rexanne; shakeeka < thadd; shakeeka += nixon) {
        tyshelle.push(alainie(orum, shakeeka, shakeeka + nixon > thadd ? thadd : shakeeka + nixon));
      }
      if (rexanne === 1) moani = orum[parneet - 1], tyshelle.push(sebashtian[moani >> 2] + sebashtian[moani << 4 & 63] + "=="); else rexanne === 2 && (moani = (orum[parneet - 2] << 8) + orum[parneet - 1], tyshelle.push(sebashtian[moani >> 10] + sebashtian[moani >> 4 & 63] + sebashtian[moani << 2 & 63] + "="));
      return tyshelle.join("");
    }
  }, {}], 13: [function (azriela, leegan, amayra) {
    (function (_0x5b39ad) {
      "use strict";
      var ziclali = azriela("base64-js"), herschal = azriela("ieee754");
      amayra.Buffer = lavonne, amayra.SlowBuffer = _0x3ae3c9, amayra.INSPECT_MAX_BYTES = 50;
      var montrae = 2147483647;
      amayra.kMaxLength = montrae, lavonne.TYPED_ARRAY_SUPPORT = cloteal();
      !lavonne.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
      function cloteal() {
        try {
          var jayten = new Uint8Array(1);
          return jayten.__proto__ = {__proto__: Uint8Array.prototype, foo: function () {
            return 42;
          }}, jayten.foo() === 42;
        } catch (jereck) {
          return ![];
        }
      }
      Object.defineProperty(lavonne.prototype, "parent", {enumerable: !![], get: function () {
        if (!lavonne.isBuffer(this)) return undefined;
        return this.buffer;
      }}), Object.defineProperty(lavonne.prototype, "offset", {enumerable: !![], get: function () {
        if (!lavonne.isBuffer(this)) return undefined;
        return this.byteOffset;
      }});
      function kaylii(sandrea) {
        if (sandrea > montrae) throw new RangeError('The value "' + sandrea + '" is invalid for option "size"');
        var aciano = new Uint8Array(sandrea);
        return aciano.__proto__ = lavonne.prototype, aciano;
      }
      function lavonne(henlie, shaqur, alparslan) {
        if (typeof henlie === "number") {
          if (typeof shaqur === "string") throw new TypeError('The "string" argument must be of type string. Received type number');
          return blaney(henlie), kaylii(henlie < 0 ? 0 : xyaire(henlie) | 0);
        }
        return delmario(henlie, shaqur, alparslan);
      }
      typeof Symbol !== "undefined" && Symbol.species != null && lavonne[Symbol.species] === lavonne && Object.defineProperty(lavonne, Symbol.species, {value: null, configurable: !![], enumerable: ![], writable: ![]});
      lavonne.poolSize = 8192;
      function delmario(taves, ozai, dianetta) {
        if (typeof taves === "string") return sol(taves, ozai);
        if (ArrayBuffer.isView(taves)) return kebra(taves);
        if (taves == null) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof taves);
        if (taves instanceof ArrayBuffer || taves != null && taves.constructor != null && taves.constructor.name != null && taves.constructor.name === ArrayBuffer.name || taves && (taves.buffer instanceof ArrayBuffer || taves.buffer != null && taves.buffer.constructor != null && taves.buffer.constructor.name != null && taves.buffer.constructor.name === ArrayBuffer.name)) return royale(taves, ozai, dianetta);
        if (typeof taves === "number") throw new TypeError('The "value" argument must not be of type number. Received type number');
        var seidy = taves.valueOf && taves.valueOf();
        if (seidy != null && seidy !== taves) return lavonne.from(seidy, ozai, dianetta);
        var chandel = berek(taves);
        if (chandel) return chandel;
        if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof taves[Symbol.toPrimitive] === "function") return lavonne.from(taves[Symbol.toPrimitive]("string"), ozai, dianetta);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof taves);
      }
      lavonne.from = function (endrew, siriya, lelend) {
        return delmario(endrew, siriya, lelend);
      }, lavonne.prototype.__proto__ = Uint8Array.prototype, lavonne.__proto__ = Uint8Array;
      function blaney(britteny) {
        if (typeof britteny !== "number") throw new TypeError('"size" argument must be of type number'); else {
          if (britteny < 0) throw new RangeError('The value "' + britteny + '" is invalid for option "size"');
        }
      }
      function zaney(lira, pars, katherleen) {
        blaney(lira);
        if (lira <= 0) return kaylii(lira);
        if (pars !== undefined) return typeof katherleen === "string" ? kaylii(lira).fill(pars, katherleen) : kaylii(lira).fill(pars);
        return kaylii(lira);
      }
      lavonne.alloc = function (charlesedward, blakleigh, brandalyn) {
        return zaney(charlesedward, blakleigh, brandalyn);
      };
      lavonne.allocUnsafe = function (ashey) {
        return blaney(ashey), kaylii(ashey < 0 ? 0 : xyaire(ashey) | 0);
      }, lavonne.allocUnsafeSlow = function (berger) {
        return blaney(berger), kaylii(berger < 0 ? 0 : xyaire(berger) | 0);
      };
      function sol(miaya, leelen) {
        (typeof leelen !== "string" || leelen === "") && (leelen = "utf8");
        if (!lavonne.isEncoding(leelen)) throw new TypeError("Unknown encoding: " + leelen);
        var shaude = embri(miaya, leelen) | 0, deshun = kaylii(shaude), loriell = deshun.write(miaya, leelen);
        return loriell !== shaude && (deshun = deshun.slice(0, loriell)), deshun;
      }
      function kebra(saryna) {
        var mikaylyn = saryna.length < 0 ? 0 : xyaire(saryna.length) | 0, ferenc = kaylii(mikaylyn);
        for (var aythan = 0; aythan < mikaylyn; aythan += 1) {
          ferenc[aythan] = saryna[aythan] & 255;
        }
        return ferenc;
      }
      function royale(sergio, karev, milisa) {
        if (karev < 0 || sergio.byteLength < karev) throw new RangeError('"offset" is outside of buffer bounds');
        if (sergio.byteLength < karev + (milisa || 0)) throw new RangeError('"length" is outside of buffer bounds');
        var katiria;
        if (karev === undefined && milisa === undefined) katiria = new Uint8Array(sergio); else milisa === undefined ? katiria = new Uint8Array(sergio, karev) : katiria = new Uint8Array(sergio, karev, milisa);
        return katiria.__proto__ = lavonne.prototype, katiria;
      }
      function berek(truley) {
        if (lavonne.isBuffer(truley)) {
          var peregrin = xyaire(truley.length) | 0, inisha = kaylii(peregrin);
          if (inisha.length === 0) return inisha;
          return truley.copy(inisha, 0, 0, peregrin), inisha;
        }
        if (truley.length !== undefined) {
          if (typeof truley.length !== "number" || truley.length !== truley.length) return kaylii(0);
          return kebra(truley);
        }
        if (truley.type === "Buffer" && Array.isArray(truley.data)) return kebra(truley.data);
      }
      function xyaire(chrisoula) {
        if (chrisoula >= montrae) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + montrae.toString(16) + " bytes");
        return chrisoula | 0;
      }
      lavonne.isBuffer = function deelda(lamontre) {
        return lamontre != null && lamontre._isBuffer === !![] && lamontre !== lavonne.prototype;
      }, lavonne.compare = function zinab(tashima, quamae) {
        if (tashima instanceof Uint8Array || tashima != null && tashima.constructor != null && tashima.constructor.name != null && tashima.constructor.name === Uint8Array.name) tashima = lavonne.from(tashima, tashima.offset, tashima.byteLength);
        if (quamae instanceof Uint8Array || quamae != null && quamae.constructor != null && quamae.constructor.name != null && quamae.constructor.name === Uint8Array.name) quamae = lavonne.from(quamae, quamae.offset, quamae.byteLength);
        if (!lavonne.isBuffer(tashima) || !lavonne.isBuffer(quamae)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (tashima === quamae) return 0;
        var jak = tashima.length, deavin = quamae.length;
        for (var milla = 0, karoleena = Math.min(jak, deavin); milla < karoleena; ++milla) {
          if (tashima[milla] !== quamae[milla]) {
            jak = tashima[milla], deavin = quamae[milla];
            break;
          }
        }
        if (jak < deavin) return -1;
        if (deavin < jak) return 1;
        return 0;
      }, lavonne.isEncoding = function amymarie(leiza) {
        switch (String(leiza).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return !![];
          default:
            return ![];
        }
      }, lavonne.concat = function victorialynn(shavaughn, janalynn) {
        if (!Array.isArray(shavaughn)) throw new TypeError('"list" argument must be an Array of Buffers');
        if (shavaughn.length === 0) return lavonne.alloc(0);
        var lerae;
        if (janalynn === undefined) {
          janalynn = 0;
          for (lerae = 0; lerae < shavaughn.length; ++lerae) {
            janalynn += shavaughn[lerae].length;
          }
        }
        var anish = lavonne.allocUnsafe(janalynn), alexicia = 0;
        for (lerae = 0; lerae < shavaughn.length; ++lerae) {
          var luvena = shavaughn[lerae];
          (luvena instanceof Uint8Array || luvena != null && luvena.constructor != null && luvena.constructor.name != null && luvena.constructor.name === Uint8Array.name) && (luvena = lavonne.from(luvena));
          if (!lavonne.isBuffer(luvena)) throw new TypeError('"list" argument must be an Array of Buffers');
          luvena.copy(anish, alexicia), alexicia += luvena.length;
        }
        return anish;
      };
      function embri(chrystiana, kasonya) {
        if (lavonne.isBuffer(chrystiana)) return chrystiana.length;
        if (ArrayBuffer.isView(chrystiana) || (chrystiana instanceof ArrayBuffer || chrystiana != null && chrystiana.constructor != null && chrystiana.constructor.name != null && chrystiana.constructor.name === ArrayBuffer.name)) return chrystiana.byteLength;
        if (typeof chrystiana !== "string") throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof chrystiana);
        var terell = chrystiana.length, dectrick = arguments.length > 2 && arguments[2] === !![];
        if (!dectrick && terell === 0) return 0;
        var yesli = ![];
        for (;;) {
          switch (kasonya) {
            case "ascii":
            case "latin1":
            case "binary":
              return terell;
            case "utf8":
            case "utf-8":
              return jyles(chrystiana).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return terell * 2;
            case "hex":
              return terell >>> 1;
            case "base64":
              return ziclali.toByteArray(errold(chrystiana)).length;
            default:
              if (yesli) return dectrick ? -1 : jyles(chrystiana).length;
              kasonya = ("" + kasonya).toLowerCase(), yesli = !![];
          }
        }
      }
      lavonne.byteLength = embri;
      function leanza(shakiela, georgenne, einer) {
        var dauson = ![];
        (georgenne === undefined || georgenne < 0) && (georgenne = 0);
        if (georgenne > this.length) return "";
        (einer === undefined || einer > this.length) && (einer = this.length);
        if (einer <= 0) return "";
        einer >>>= 0, georgenne >>>= 0;
        if (einer <= georgenne) return "";
        if (!shakiela) shakiela = "utf8";
        while (!![]) {
          switch (shakiela) {
            case "hex":
              return giahan(this, georgenne, einer);
            case "utf8":
            case "utf-8":
              return mithran(this, georgenne, einer);
            case "ascii":
              return jela(this, georgenne, einer);
            case "latin1":
            case "binary":
              return yenesis(this, georgenne, einer);
            case "base64":
              return averymarie(this, georgenne, einer);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return kasimu(this, georgenne, einer);
            default:
              if (dauson) throw new TypeError("Unknown encoding: " + shakiela);
              shakiela = (shakiela + "").toLowerCase(), dauson = !![];
          }
        }
      }
      lavonne.prototype._isBuffer = !![];
      function canden(auriah, mylan, rokaya) {
        var dassie = auriah[mylan];
        auriah[mylan] = auriah[rokaya], auriah[rokaya] = dassie;
      }
      lavonne.prototype.swap16 = function vidette() {
        var achintya = this.length;
        if (achintya % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var hishaam = 0; hishaam < achintya; hishaam += 2) {
          canden(this, hishaam, hishaam + 1);
        }
        return this;
      }, lavonne.prototype.swap32 = function seitu() {
        var jasim = this.length;
        if (jasim % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var venelope = 0; venelope < jasim; venelope += 4) {
          canden(this, venelope, venelope + 3), canden(this, venelope + 1, venelope + 2);
        }
        return this;
      }, lavonne.prototype.swap64 = function nazariy() {
        var alaeya = this.length;
        if (alaeya % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var bambie = 0; bambie < alaeya; bambie += 8) {
          canden(this, bambie, bambie + 7), canden(this, bambie + 1, bambie + 6), canden(this, bambie + 2, bambie + 5), canden(this, bambie + 3, bambie + 4);
        }
        return this;
      }, lavonne.prototype.toString = function kwaku() {
        var theado = this.length;
        if (theado === 0) return "";
        if (arguments.length === 0) return mithran(this, 0, theado);
        return leanza.apply(this, arguments);
      }, lavonne.prototype.toLocaleString = lavonne.prototype.toString, lavonne.prototype.equals = function wrangler(braddox) {
        if (!lavonne.isBuffer(braddox)) throw new TypeError("Argument must be a Buffer");
        if (this === braddox) return !![];
        return lavonne.compare(this, braddox) === 0;
      }, lavonne.prototype.inspect = function ayonah() {
        var lasheka = "", trinden = amayra.INSPECT_MAX_BYTES;
        lasheka = this.toString("hex", 0, trinden).replace(/(.{2})/g, "$1 ").trim();
        if (this.length > trinden) lasheka += " ... ";
        return "<Buffer " + lasheka + ">";
      }, lavonne.prototype.compare = function lawyer(hikeem, makaelah, nerely, liyanna, ariel) {
        (hikeem instanceof Uint8Array || hikeem != null && hikeem.constructor != null && hikeem.constructor.name != null && hikeem.constructor.name === Uint8Array.name) && (hikeem = lavonne.from(hikeem, hikeem.offset, hikeem.byteLength));
        if (!lavonne.isBuffer(hikeem)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof hikeem);
        makaelah === undefined && (makaelah = 0);
        nerely === undefined && (nerely = hikeem ? hikeem.length : 0);
        liyanna === undefined && (liyanna = 0);
        ariel === undefined && (ariel = this.length);
        if (makaelah < 0 || nerely > hikeem.length || liyanna < 0 || ariel > this.length) throw new RangeError("out of range index");
        if (liyanna >= ariel && makaelah >= nerely) return 0;
        if (liyanna >= ariel) return -1;
        if (makaelah >= nerely) return 1;
        makaelah >>>= 0, nerely >>>= 0, liyanna >>>= 0, ariel >>>= 0;
        if (this === hikeem) return 0;
        var paysleigh = ariel - liyanna, eto = nerely - makaelah, vienne = Math.min(paysleigh, eto), seyla = this.slice(liyanna, ariel), chizue = hikeem.slice(makaelah, nerely);
        for (var lyra = 0; lyra < vienne; ++lyra) {
          if (seyla[lyra] !== chizue[lyra]) {
            paysleigh = seyla[lyra], eto = chizue[lyra];
            break;
          }
        }
        if (paysleigh < eto) return -1;
        if (eto < paysleigh) return 1;
        return 0;
      };
      function alvana(daniyel, onisty, vivvian, shenel, dameka) {
        if (daniyel.length === 0) return -1;
        if (typeof vivvian === "string") shenel = vivvian, vivvian = 0; else {
          if (vivvian > 2147483647) vivvian = 2147483647; else vivvian < -2147483648 && (vivvian = -2147483648);
        }
        vivvian = +vivvian;
        vivvian !== vivvian && (vivvian = dameka ? 0 : daniyel.length - 1);
        if (vivvian < 0) vivvian = daniyel.length + vivvian;
        if (vivvian >= daniyel.length) {
          if (dameka) return -1; else vivvian = daniyel.length - 1;
        } else {
          if (vivvian < 0) {
            if (dameka) vivvian = 0; else return -1;
          }
        }
        typeof onisty === "string" && (onisty = lavonne.from(onisty, shenel));
        if (lavonne.isBuffer(onisty)) {
          if (onisty.length === 0) return -1;
          return shiheem(daniyel, onisty, vivvian, shenel, dameka);
        } else {
          if (typeof onisty === "number") {
            onisty = onisty & 255;
            if (typeof Uint8Array.prototype.indexOf === "function") return dameka ? Uint8Array.prototype.indexOf.call(daniyel, onisty, vivvian) : Uint8Array.prototype.lastIndexOf.call(daniyel, onisty, vivvian);
            return shiheem(daniyel, [onisty], vivvian, shenel, dameka);
          }
        }
        throw new TypeError("val must be string, number or Buffer");
      }
      function shiheem(itzamaray, teion, steele, abigai, elliette) {
        var dawnette = 1, damianna = itzamaray.length, packer = teion.length;
        if (abigai !== undefined) {
          abigai = String(abigai).toLowerCase();
          if (abigai === "ucs2" || abigai === "ucs-2" || abigai === "utf16le" || abigai === "utf-16le") {
            if (itzamaray.length < 2 || teion.length < 2) return -1;
            dawnette = 2, damianna /= 2, packer /= 2, steele /= 2;
          }
        }
        function aveer(guerline, yaciel) {
          return dawnette === 1 ? guerline[yaciel] : guerline.readUInt16BE(yaciel * dawnette);
        }
        var raafay;
        if (elliette) {
          var sanae = -1;
          for (raafay = steele; raafay < damianna; raafay++) {
            if (aveer(itzamaray, raafay) === aveer(teion, sanae === -1 ? 0 : raafay - sanae)) {
              if (sanae === -1) sanae = raafay;
              if (raafay - sanae + 1 === packer) return sanae * dawnette;
            } else {
              if (sanae !== -1) raafay -= raafay - sanae;
              sanae = -1;
            }
          }
        } else {
          if (steele + packer > damianna) steele = damianna - packer;
          for (raafay = steele; raafay >= 0; raafay--) {
            var nevea = !![];
            for (var bassirou = 0; bassirou < packer; bassirou++) {
              if (aveer(itzamaray, raafay + bassirou) !== aveer(teion, bassirou)) {
                nevea = ![];
                break;
              }
            }
            if (nevea) return raafay;
          }
        }
        return -1;
      }
      lavonne.prototype.includes = function nacari(harika, nataliemarie, ashiah) {
        return this.indexOf(harika, nataliemarie, ashiah) !== -1;
      }, lavonne.prototype.indexOf = function jasiyah(ahzariah, deyonte, tiniya) {
        return alvana(this, ahzariah, deyonte, tiniya, !![]);
      }, lavonne.prototype.lastIndexOf = function clarisha(evennie, abdulahad, jance) {
        return alvana(this, evennie, abdulahad, jance, ![]);
      };
      function erek(horton, deion, mykail, keelani) {
        mykail = Number(mykail) || 0;
        var ardilia = horton.length - mykail;
        !keelani ? keelani = ardilia : (keelani = Number(keelani), keelani > ardilia && (keelani = ardilia));
        var brandea = deion.length;
        keelani > brandea / 2 && (keelani = brandea / 2);
        for (var kianga = 0; kianga < keelani; ++kianga) {
          var alishka = parseInt(deion.substr(kianga * 2, 2), 16);
          if (alishka !== alishka) return kianga;
          horton[mykail + kianga] = alishka;
        }
        return kianga;
      }
      lavonne.prototype.write = function edwena(laraine, viviani, breyawna, liamm) {
        if (viviani === undefined) liamm = "utf8", breyawna = this.length, viviani = 0; else {
          if (breyawna === undefined && typeof viviani === "string") liamm = viviani, breyawna = this.length, viviani = 0; else {
            if (isFinite(viviani)) {
              viviani = viviani >>> 0;
              if (isFinite(breyawna)) {
                breyawna = breyawna >>> 0;
                if (liamm === undefined) liamm = "utf8";
              } else liamm = breyawna, breyawna = undefined;
            } else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
          }
        }
        var jonnae = this.length - viviani;
        if (breyawna === undefined || breyawna > jonnae) breyawna = jonnae;
        if (laraine.length > 0 && (breyawna < 0 || viviani < 0) || viviani > this.length) throw new RangeError("Attempt to write outside buffer bounds");
        if (!liamm) liamm = "utf8";
        var daebreona = ![];
        for (;;) {
          switch (liamm) {
            case "hex":
              return erek(this, laraine, viviani, breyawna);
            case "utf8":
            case "utf-8":
              return thor(jyles(laraine, this.length - viviani), this, viviani, breyawna);
            case "ascii":
              return thor(adnel(laraine), this, viviani, breyawna);
            case "latin1":
            case "binary":
              return thor(adnel(laraine), this, viviani, breyawna);
            case "base64":
              return thor(ziclali.toByteArray(errold(laraine)), this, viviani, breyawna);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return thor(timone(laraine, this.length - viviani), this, viviani, breyawna);
            default:
              if (daebreona) throw new TypeError("Unknown encoding: " + liamm);
              liamm = ("" + liamm).toLowerCase(), daebreona = !![];
          }
        }
      }, lavonne.prototype.toJSON = function debara() {
        return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)};
      };
      function averymarie(kass, kaonou, onald) {
        return kaonou === 0 && onald === kass.length ? ziclali.fromByteArray(kass) : ziclali.fromByteArray(kass.slice(kaonou, onald));
      }
      function mithran(andraia, zakee, denson) {
        denson = Math.min(andraia.length, denson);
        var muzaffar = [], beranda = zakee;
        while (beranda < denson) {
          var ysobel = andraia[beranda], skylyn = null, glynis = ysobel > 239 ? 4 : ysobel > 223 ? 3 : ysobel > 191 ? 2 : 1;
          if (beranda + glynis <= denson) {
            var sajani, zykerriah, zacchaeus, soldier;
            switch (glynis) {
              case 1:
                ysobel < 128 && (skylyn = ysobel);
                break;
              case 2:
                sajani = andraia[beranda + 1];
                (sajani & 192) === 128 && (soldier = (ysobel & 31) << 6 | sajani & 63, soldier > 127 && (skylyn = soldier));
                break;
              case 3:
                sajani = andraia[beranda + 1], zykerriah = andraia[beranda + 2];
                (sajani & 192) === 128 && (zykerriah & 192) === 128 && (soldier = (ysobel & 15) << 12 | (sajani & 63) << 6 | zykerriah & 63, soldier > 2047 && (soldier < 55296 || soldier > 57343) && (skylyn = soldier));
                break;
              case 4:
                sajani = andraia[beranda + 1], zykerriah = andraia[beranda + 2], zacchaeus = andraia[beranda + 3];
                (sajani & 192) === 128 && (zykerriah & 192) === 128 && (zacchaeus & 192) === 128 && (soldier = (ysobel & 15) << 18 | (sajani & 63) << 12 | (zykerriah & 63) << 6 | zacchaeus & 63, soldier > 65535 && soldier < 1114112 && (skylyn = soldier));
            }
          }
          if (skylyn === null) skylyn = 65533, glynis = 1; else skylyn > 65535 && (skylyn -= 65536, muzaffar.push(skylyn >>> 10 & 1023 | 55296), skylyn = 56320 | skylyn & 1023);
          muzaffar.push(skylyn), beranda += glynis;
        }
        return imelia(muzaffar);
      }
      var jahdon = 4096;
      function imelia(robbert) {
        var yashas = robbert.length;
        if (yashas <= jahdon) return String.fromCharCode.apply(String, robbert);
        var layle = "", jonmarc = 0;
        while (jonmarc < yashas) {
          layle += String.fromCharCode.apply(String, robbert.slice(jonmarc, jonmarc += jahdon));
        }
        return layle;
      }
      function jela(janavia, kea, maxeen) {
        var ivyona = "";
        maxeen = Math.min(janavia.length, maxeen);
        for (var jevante = kea; jevante < maxeen; ++jevante) {
          ivyona += String.fromCharCode(janavia[jevante] & 127);
        }
        return ivyona;
      }
      function yenesis(htoo, feleicia, azilee) {
        var samayah = "";
        azilee = Math.min(htoo.length, azilee);
        for (var saragrace = feleicia; saragrace < azilee; ++saragrace) {
          samayah += String.fromCharCode(htoo[saragrace]);
        }
        return samayah;
      }
      function giahan(demarion, ziden, jaimin) {
        var carlana = demarion.length;
        if (!ziden || ziden < 0) ziden = 0;
        if (!jaimin || jaimin < 0 || jaimin > carlana) jaimin = carlana;
        var genna = "";
        for (var lamariah = ziden; lamariah < jaimin; ++lamariah) {
          genna += odarius(demarion[lamariah]);
        }
        return genna;
      }
      function kasimu(talmer, wills, kurby) {
        var maria = talmer.slice(wills, kurby), kynd = "";
        for (var nikoli = 0; nikoli < maria.length; nikoli += 2) {
          kynd += String.fromCharCode(maria[nikoli] + maria[nikoli + 1] * 256);
        }
        return kynd;
      }
      lavonne.prototype.slice = function teodor(carmalita, tennillie) {
        var jamileth = this.length;
        carmalita = ~~carmalita, tennillie = tennillie === undefined ? jamileth : ~~tennillie;
        if (carmalita < 0) {
          carmalita += jamileth;
          if (carmalita < 0) carmalita = 0;
        } else carmalita > jamileth && (carmalita = jamileth);
        if (tennillie < 0) {
          tennillie += jamileth;
          if (tennillie < 0) tennillie = 0;
        } else tennillie > jamileth && (tennillie = jamileth);
        if (tennillie < carmalita) tennillie = carmalita;
        var cinsere = this.subarray(carmalita, tennillie);
        return cinsere.__proto__ = lavonne.prototype, cinsere;
      };
      function jamanda(qualiyah, tauras, kokou) {
        if (qualiyah % 1 !== 0 || qualiyah < 0) throw new RangeError("offset is not uint");
        if (qualiyah + tauras > kokou) throw new RangeError("Trying to access beyond buffer length");
      }
      lavonne.prototype.readUIntLE = function keiarra(teejay, lakietha, adolin) {
        teejay = teejay >>> 0, lakietha = lakietha >>> 0;
        if (!adolin) jamanda(teejay, lakietha, this.length);
        var markeitha = this[teejay], steeven = 1, yirmeyah = 0;
        while (++yirmeyah < lakietha && (steeven *= 256)) {
          markeitha += this[teejay + yirmeyah] * steeven;
        }
        return markeitha;
      }, lavonne.prototype.readUIntBE = function xzorion(liahona, deaja, zacora) {
        liahona = liahona >>> 0, deaja = deaja >>> 0;
        !zacora && jamanda(liahona, deaja, this.length);
        var breahanna = this[liahona + --deaja], shatell = 1;
        while (deaja > 0 && (shatell *= 256)) {
          breahanna += this[liahona + --deaja] * shatell;
        }
        return breahanna;
      }, lavonne.prototype.readUInt8 = function delaysia(charlia, lakish) {
        charlia = charlia >>> 0;
        if (!lakish) jamanda(charlia, 1, this.length);
        return this[charlia];
      }, lavonne.prototype.readUInt16LE = function jimy(lowry, geneses) {
        lowry = lowry >>> 0;
        if (!geneses) jamanda(lowry, 2, this.length);
        return this[lowry] | this[lowry + 1] << 8;
      }, lavonne.prototype.readUInt16BE = function teniqua(dajuana, damante) {
        dajuana = dajuana >>> 0;
        if (!damante) jamanda(dajuana, 2, this.length);
        return this[dajuana] << 8 | this[dajuana + 1];
      }, lavonne.prototype.readUInt32LE = function padric(coalson, hulene) {
        coalson = coalson >>> 0;
        if (!hulene) jamanda(coalson, 4, this.length);
        return (this[coalson] | this[coalson + 1] << 8 | this[coalson + 2] << 16) + this[coalson + 3] * 16777216;
      }, lavonne.prototype.readUInt32BE = function reide(caetlyn, adamarys) {
        caetlyn = caetlyn >>> 0;
        if (!adamarys) jamanda(caetlyn, 4, this.length);
        return this[caetlyn] * 16777216 + (this[caetlyn + 1] << 16 | this[caetlyn + 2] << 8 | this[caetlyn + 3]);
      }, lavonne.prototype.readIntLE = function tynisia(wylodine, dyquan, melvan) {
        wylodine = wylodine >>> 0, dyquan = dyquan >>> 0;
        if (!melvan) jamanda(wylodine, dyquan, this.length);
        var syeir = this[wylodine], muzamil = 1, camrynn = 0;
        while (++camrynn < dyquan && (muzamil *= 256)) {
          syeir += this[wylodine + camrynn] * muzamil;
        }
        muzamil *= 128;
        if (syeir >= muzamil) syeir -= Math.pow(2, 8 * dyquan);
        return syeir;
      }, lavonne.prototype.readIntBE = function malloy(ivel, aletta, amichai) {
        ivel = ivel >>> 0, aletta = aletta >>> 0;
        if (!amichai) jamanda(ivel, aletta, this.length);
        var hulices = aletta, ellani = 1, yumaira = this[ivel + --hulices];
        while (hulices > 0 && (ellani *= 256)) {
          yumaira += this[ivel + --hulices] * ellani;
        }
        ellani *= 128;
        if (yumaira >= ellani) yumaira -= Math.pow(2, 8 * aletta);
        return yumaira;
      }, lavonne.prototype.readInt8 = function marguerit(leilan, marthalee) {
        leilan = leilan >>> 0;
        if (!marthalee) jamanda(leilan, 1, this.length);
        if (!(this[leilan] & 128)) return this[leilan];
        return (255 - this[leilan] + 1) * -1;
      }, lavonne.prototype.readInt16LE = function quyen(nakhai, hassen) {
        nakhai = nakhai >>> 0;
        if (!hassen) jamanda(nakhai, 2, this.length);
        var zevy = this[nakhai] | this[nakhai + 1] << 8;
        return zevy & 32768 ? zevy | 4294901760 : zevy;
      }, lavonne.prototype.readInt16BE = function natural(annahi, olias) {
        annahi = annahi >>> 0;
        if (!olias) jamanda(annahi, 2, this.length);
        var ethny = this[annahi + 1] | this[annahi] << 8;
        return ethny & 32768 ? ethny | 4294901760 : ethny;
      }, lavonne.prototype.readInt32LE = function jahleil(jahziya, elayne) {
        jahziya = jahziya >>> 0;
        if (!elayne) jamanda(jahziya, 4, this.length);
        return this[jahziya] | this[jahziya + 1] << 8 | this[jahziya + 2] << 16 | this[jahziya + 3] << 24;
      }, lavonne.prototype.readInt32BE = function brytne(cadeidra, concepcion) {
        cadeidra = cadeidra >>> 0;
        if (!concepcion) jamanda(cadeidra, 4, this.length);
        return this[cadeidra] << 24 | this[cadeidra + 1] << 16 | this[cadeidra + 2] << 8 | this[cadeidra + 3];
      }, lavonne.prototype.readFloatLE = function alexavior(alasia, christhian) {
        alasia = alasia >>> 0;
        if (!christhian) jamanda(alasia, 4, this.length);
        return herschal.read(this, alasia, !![], 23, 4);
      }, lavonne.prototype.readFloatBE = function akasha(dreyton, jayen) {
        dreyton = dreyton >>> 0;
        if (!jayen) jamanda(dreyton, 4, this.length);
        return herschal.read(this, dreyton, ![], 23, 4);
      }, lavonne.prototype.readDoubleLE = function baaz(azarion, samena) {
        azarion = azarion >>> 0;
        if (!samena) jamanda(azarion, 8, this.length);
        return herschal.read(this, azarion, !![], 52, 8);
      }, lavonne.prototype.readDoubleBE = function glendy(mio, raeven) {
        mio = mio >>> 0;
        if (!raeven) jamanda(mio, 8, this.length);
        return herschal.read(this, mio, ![], 52, 8);
      };
      function crist(stephne, shiretta, sylinda, nahjae, dmia, jusiah) {
        if (!lavonne.isBuffer(stephne)) throw new TypeError('"buffer" argument must be a Buffer instance');
        if (shiretta > dmia || shiretta < jusiah) throw new RangeError('"value" argument is out of bounds');
        if (sylinda + nahjae > stephne.length) throw new RangeError("Index out of range");
      }
      lavonne.prototype.writeUIntLE = function aniken(devron, benitez, parthiv, sabrinia) {
        devron = +devron, benitez = benitez >>> 0, parthiv = parthiv >>> 0;
        if (!sabrinia) {
          var yasheika = Math.pow(2, 8 * parthiv) - 1;
          crist(this, devron, benitez, parthiv, yasheika, 0);
        }
        var monir = 1, macgregor = 0;
        this[benitez] = devron & 255;
        while (++macgregor < parthiv && (monir *= 256)) {
          this[benitez + macgregor] = devron / monir & 255;
        }
        return benitez + parthiv;
      }, lavonne.prototype.writeUIntBE = function lichelle(clabon, jisella, hinlee, kazzandra) {
        clabon = +clabon, jisella = jisella >>> 0, hinlee = hinlee >>> 0;
        if (!kazzandra) {
          var reiken = Math.pow(2, 8 * hinlee) - 1;
          crist(this, clabon, jisella, hinlee, reiken, 0);
        }
        var megail = hinlee - 1, darrik = 1;
        this[jisella + megail] = clabon & 255;
        while (--megail >= 0 && (darrik *= 256)) {
          this[jisella + megail] = clabon / darrik & 255;
        }
        return jisella + hinlee;
      }, lavonne.prototype.writeUInt8 = function sorah(adelicia, hayslee, maddysen) {
        adelicia = +adelicia, hayslee = hayslee >>> 0;
        if (!maddysen) crist(this, adelicia, hayslee, 1, 255, 0);
        return this[hayslee] = adelicia & 255, hayslee + 1;
      }, lavonne.prototype.writeUInt16LE = function garrix(kambre, antoinae, jovane) {
        kambre = +kambre, antoinae = antoinae >>> 0;
        if (!jovane) crist(this, kambre, antoinae, 2, 65535, 0);
        return this[antoinae] = kambre & 255, this[antoinae + 1] = kambre >>> 8, antoinae + 2;
      }, lavonne.prototype.writeUInt16BE = function erikc(herry, zyre, osler) {
        herry = +herry, zyre = zyre >>> 0;
        if (!osler) crist(this, herry, zyre, 2, 65535, 0);
        return this[zyre] = herry >>> 8, this[zyre + 1] = herry & 255, zyre + 2;
      }, lavonne.prototype.writeUInt32LE = function lureta(ebna, tyshekia, dara) {
        ebna = +ebna, tyshekia = tyshekia >>> 0;
        if (!dara) crist(this, ebna, tyshekia, 4, 4294967295, 0);
        return this[tyshekia + 3] = ebna >>> 24, this[tyshekia + 2] = ebna >>> 16, this[tyshekia + 1] = ebna >>> 8, this[tyshekia] = ebna & 255, tyshekia + 4;
      }, lavonne.prototype.writeUInt32BE = function alanoud(letonia, garnita, jewelean) {
        letonia = +letonia, garnita = garnita >>> 0;
        if (!jewelean) crist(this, letonia, garnita, 4, 4294967295, 0);
        return this[garnita] = letonia >>> 24, this[garnita + 1] = letonia >>> 16, this[garnita + 2] = letonia >>> 8, this[garnita + 3] = letonia & 255, garnita + 4;
      }, lavonne.prototype.writeIntLE = function nickola(luca, isael, jameria, zalaya) {
        luca = +luca, isael = isael >>> 0;
        if (!zalaya) {
          var lendora = Math.pow(2, 8 * jameria - 1);
          crist(this, luca, isael, jameria, lendora - 1, -lendora);
        }
        var ryeli = 0, dariana = 1, eeshaan = 0;
        this[isael] = luca & 255;
        while (++ryeli < jameria && (dariana *= 256)) {
          luca < 0 && eeshaan === 0 && this[isael + ryeli - 1] !== 0 && (eeshaan = 1), this[isael + ryeli] = (luca / dariana >> 0) - eeshaan & 255;
        }
        return isael + jameria;
      }, lavonne.prototype.writeIntBE = function amandalynn(adrianny, catiria, edrick, natalio) {
        adrianny = +adrianny, catiria = catiria >>> 0;
        if (!natalio) {
          var kalypso = Math.pow(2, 8 * edrick - 1);
          crist(this, adrianny, catiria, edrick, kalypso - 1, -kalypso);
        }
        var jailyne = edrick - 1, zianya = 1, shariann = 0;
        this[catiria + jailyne] = adrianny & 255;
        while (--jailyne >= 0 && (zianya *= 256)) {
          adrianny < 0 && shariann === 0 && this[catiria + jailyne + 1] !== 0 && (shariann = 1), this[catiria + jailyne] = (adrianny / zianya >> 0) - shariann & 255;
        }
        return catiria + edrick;
      }, lavonne.prototype.writeInt8 = function jacari(farin, beedie, wassil) {
        farin = +farin, beedie = beedie >>> 0;
        if (!wassil) crist(this, farin, beedie, 1, 127, -128);
        if (farin < 0) farin = 255 + farin + 1;
        return this[beedie] = farin & 255, beedie + 1;
      }, lavonne.prototype.writeInt16LE = function macall(madria, koralyne, venora) {
        madria = +madria, koralyne = koralyne >>> 0;
        if (!venora) crist(this, madria, koralyne, 2, 32767, -32768);
        return this[koralyne] = madria & 255, this[koralyne + 1] = madria >>> 8, koralyne + 2;
      }, lavonne.prototype.writeInt16BE = function raith(zyndaya, jainah, devantre) {
        zyndaya = +zyndaya, jainah = jainah >>> 0;
        if (!devantre) crist(this, zyndaya, jainah, 2, 32767, -32768);
        return this[jainah] = zyndaya >>> 8, this[jainah + 1] = zyndaya & 255, jainah + 2;
      }, lavonne.prototype.writeInt32LE = function castina(jewelie, jebediah, hilaire) {
        jewelie = +jewelie, jebediah = jebediah >>> 0;
        if (!hilaire) crist(this, jewelie, jebediah, 4, 2147483647, -2147483648);
        return this[jebediah] = jewelie & 255, this[jebediah + 1] = jewelie >>> 8, this[jebediah + 2] = jewelie >>> 16, this[jebediah + 3] = jewelie >>> 24, jebediah + 4;
      }, lavonne.prototype.writeInt32BE = function jeremia(vesenia, jhay, conola) {
        vesenia = +vesenia, jhay = jhay >>> 0;
        if (!conola) crist(this, vesenia, jhay, 4, 2147483647, -2147483648);
        if (vesenia < 0) vesenia = 4294967295 + vesenia + 1;
        return this[jhay] = vesenia >>> 24, this[jhay + 1] = vesenia >>> 16, this[jhay + 2] = vesenia >>> 8, this[jhay + 3] = vesenia & 255, jhay + 4;
      };
      function moriah(milinda, madora, rayaansh, neeli, shawndra, baraka) {
        if (rayaansh + neeli > milinda.length) throw new RangeError("Index out of range");
        if (rayaansh < 0) throw new RangeError("Index out of range");
      }
      lavonne.prototype.writeFloatLE = function patrich(jerico, ramos, srivatsa) {
        return jerico = +jerico, ramos = ramos >>> 0, !srivatsa && moriah(this, jerico, ramos, 4, 3.4028234663852886e38, -3.4028234663852886e38), herschal.write(this, jerico, ramos, !![], 23, 4), ramos + 4;
      }, lavonne.prototype.writeFloatBE = function casyn(sahmya, lafrance, mariona) {
        return sahmya = +sahmya, lafrance = lafrance >>> 0, !mariona && moriah(this, sahmya, lafrance, 4, 3.4028234663852886e38, -3.4028234663852886e38), herschal.write(this, sahmya, lafrance, ![], 23, 4), lafrance + 4;
      };
      lavonne.prototype.writeDoubleLE = function lomax(jamion, kyrillos, harlod) {
        return jamion = +jamion, kyrillos = kyrillos >>> 0, !harlod && moriah(this, jamion, kyrillos, 8, 1.7976931348623157e308, -1.7976931348623157e308), herschal.write(this, jamion, kyrillos, !![], 52, 8), kyrillos + 8;
      }, lavonne.prototype.writeDoubleBE = function adyen(aimara, ela, wanjiru) {
        return aimara = +aimara, ela = ela >>> 0, !wanjiru && moriah(this, aimara, ela, 8, 1.7976931348623157e308, -1.7976931348623157e308), herschal.write(this, aimara, ela, ![], 52, 8), ela + 8;
      }, lavonne.prototype.copy = function shaylie(nakitia, nylaya, sothea, chereka) {
        if (!lavonne.isBuffer(nakitia)) throw new TypeError("argument should be a Buffer");
        if (!sothea) sothea = 0;
        if (!chereka && chereka !== 0) chereka = this.length;
        if (nylaya >= nakitia.length) nylaya = nakitia.length;
        if (!nylaya) nylaya = 0;
        if (chereka > 0 && chereka < sothea) chereka = sothea;
        if (chereka === sothea) return 0;
        if (nakitia.length === 0 || this.length === 0) return 0;
        if (nylaya < 0) throw new RangeError("targetStart out of bounds");
        if (sothea < 0 || sothea >= this.length) throw new RangeError("Index out of range");
        if (chereka < 0) throw new RangeError("sourceEnd out of bounds");
        if (chereka > this.length) chereka = this.length;
        nakitia.length - nylaya < chereka - sothea && (chereka = nakitia.length - nylaya + sothea);
        var kaelani = chereka - sothea;
        if (this === nakitia && typeof Uint8Array.prototype.copyWithin === "function") this.copyWithin(nylaya, sothea, chereka); else {
          if (this === nakitia && sothea < nylaya && nylaya < chereka) for (var ashney = kaelani - 1; ashney >= 0; --ashney) {
            nakitia[ashney + nylaya] = this[ashney + sothea];
          } else Uint8Array.prototype.set.call(nakitia, this.subarray(sothea, chereka), nylaya);
        }
        return kaelani;
      }, lavonne.prototype.fill = function bilma(jourden, ellenmarie, keichia, liviya) {
        if (typeof jourden === "string") {
          if (typeof ellenmarie === "string") liviya = ellenmarie, ellenmarie = 0, keichia = this.length; else typeof keichia === "string" && (liviya = keichia, keichia = this.length);
          if (liviya !== undefined && typeof liviya !== "string") throw new TypeError("encoding must be a string");
          if (typeof liviya === "string" && !lavonne.isEncoding(liviya)) throw new TypeError("Unknown encoding: " + liviya);
          if (jourden.length === 1) {
            var monyka = jourden.charCodeAt(0);
            (liviya === "utf8" && monyka < 128 || liviya === "latin1") && (jourden = monyka);
          }
        } else typeof jourden === "number" && (jourden = jourden & 255);
        if (ellenmarie < 0 || this.length < ellenmarie || this.length < keichia) throw new RangeError("Out of range index");
        if (keichia <= ellenmarie) return this;
        ellenmarie = ellenmarie >>> 0, keichia = keichia === undefined ? this.length : keichia >>> 0;
        if (!jourden) jourden = 0;
        var sedonia;
        if (typeof jourden === "number") for (sedonia = ellenmarie; sedonia < keichia; ++sedonia) {
          this[sedonia] = jourden;
        } else {
          var dorthella = lavonne.isBuffer(jourden) ? jourden : lavonne.from(jourden, liviya), kolbey = dorthella.length;
          if (kolbey === 0) throw new TypeError('The value "' + jourden + '" is invalid for argument "value"');
          for (sedonia = 0; sedonia < keichia - ellenmarie; ++sedonia) {
            this[sedonia + ellenmarie] = dorthella[sedonia % kolbey];
          }
        }
        return this;
      };
      var janille = /[^+/0-9A-Za-z-_]/g;
      function errold(josejavier) {
        josejavier = josejavier.split("=")[0], josejavier = josejavier.trim().replace(janille, "");
        if (josejavier.length < 2) return "";
        while (josejavier.length % 4 !== 0) {
          josejavier = josejavier + "=";
        }
        return josejavier;
      }
      function odarius(christion) {
        if (christion < 16) return "0" + christion.toString(16);
        return christion.toString(16);
      }
      function jyles(loxli, zephania) {
        zephania = zephania || Infinity;
        var jayceonna, taiyon = loxli.length, ivyl = null, carolanne = [];
        for (var ariyonna = 0; ariyonna < taiyon; ++ariyonna) {
          jayceonna = loxli.charCodeAt(ariyonna);
          if (jayceonna > 55295 && jayceonna < 57344) {
            if (!ivyl) {
              if (jayceonna > 56319) {
                if ((zephania -= 3) > -1) carolanne.push(239, 191, 189);
                continue;
              } else {
                if (ariyonna + 1 === taiyon) {
                  if ((zephania -= 3) > -1) carolanne.push(239, 191, 189);
                  continue;
                }
              }
              ivyl = jayceonna;
              continue;
            }
            if (jayceonna < 56320) {
              if ((zephania -= 3) > -1) carolanne.push(239, 191, 189);
              ivyl = jayceonna;
              continue;
            }
            jayceonna = (ivyl - 55296 << 10 | jayceonna - 56320) + 65536;
          } else {
            if (ivyl) {
              if ((zephania -= 3) > -1) carolanne.push(239, 191, 189);
            }
          }
          ivyl = null;
          if (jayceonna < 128) {
            if ((zephania -= 1) < 0) break;
            carolanne.push(jayceonna);
          } else {
            if (jayceonna < 2048) {
              if ((zephania -= 2) < 0) break;
              carolanne.push(jayceonna >> 6 | 192, jayceonna & 63 | 128);
            } else {
              if (jayceonna < 65536) {
                if ((zephania -= 3) < 0) break;
                carolanne.push(jayceonna >> 12 | 224, jayceonna >> 6 & 63 | 128, jayceonna & 63 | 128);
              } else {
                if (jayceonna < 1114112) {
                  if ((zephania -= 4) < 0) break;
                  carolanne.push(jayceonna >> 18 | 240, jayceonna >> 12 & 63 | 128, jayceonna >> 6 & 63 | 128, jayceonna & 63 | 128);
                } else throw new Error("Invalid code point");
              }
            }
          }
        }
        return carolanne;
      }
      function adnel(johnnae) {
        var violet = [];
        for (var jania = 0; jania < johnnae.length; ++jania) {
          violet.push(johnnae.charCodeAt(jania) & 255);
        }
        return violet;
      }
      function timone(jalicia, thomasin) {
        var hadar, shyla, jazzmyne, shareif = [];
        for (var davlynn = 0; davlynn < jalicia.length; ++davlynn) {
          if ((thomasin -= 2) < 0) break;
          hadar = jalicia.charCodeAt(davlynn), shyla = hadar >> 8, jazzmyne = hadar % 256, shareif.push(jazzmyne), shareif.push(shyla);
        }
        return shareif;
      }
      function thor(kaylle, rayahna, kevonna, dechaun) {
        for (var parrie = 0; parrie < dechaun; ++parrie) {
          if (parrie + kevonna >= rayahna.length || parrie >= kaylle.length) break;
          rayahna[parrie + kevonna] = kaylle[parrie];
        }
        return parrie;
      }
    }["call"](this, azriela("buffer").Buffer));
  }, {"base64-js": 12, buffer: 13, ieee754: 14}], 14: [function (lajoy, eithne, udochukwu) {
    udochukwu.read = function (skiilar, jarrid, marshawna, espy, nikeya) {
      var hilo, rubell, ingram = nikeya * 8 - espy - 1, qalid = (1 << ingram) - 1, ervey = qalid >> 1, dehja = -7, mackinley = marshawna ? nikeya - 1 : 0, trenten = marshawna ? -1 : 1, vaun = skiilar[jarrid + mackinley];
      mackinley += trenten, hilo = vaun & (1 << -dehja) - 1, vaun >>= -dehja, dehja += ingram;
      for (; dehja > 0; hilo = hilo * 256 + skiilar[jarrid + mackinley], mackinley += trenten, dehja -= 8) {}
      rubell = hilo & (1 << -dehja) - 1, hilo >>= -dehja, dehja += espy;
      for (; dehja > 0; rubell = rubell * 256 + skiilar[jarrid + mackinley], mackinley += trenten, dehja -= 8) {}
      if (hilo === 0) hilo = 1 - ervey; else {
        if (hilo === qalid) return rubell ? NaN : (vaun ? -1 : 1) * Infinity; else rubell = rubell + Math.pow(2, espy), hilo = hilo - ervey;
      }
      return (vaun ? -1 : 1) * rubell * Math.pow(2, hilo - espy);
    }, udochukwu.write = function (caro, darshaun, tyrah, khadeja, sedale, burce) {
      var finus, ninna, javonn, tamerra = burce * 8 - sedale - 1, taka = (1 << tamerra) - 1, toshiharu = taka >> 1, naun = sedale === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, kimilee = khadeja ? 0 : burce - 1, hermene = khadeja ? 1 : -1, dazah = darshaun < 0 || darshaun === 0 && 1 / darshaun < 0 ? 1 : 0;
      darshaun = Math.abs(darshaun);
      if (isNaN(darshaun) || darshaun === Infinity) ninna = isNaN(darshaun) ? 1 : 0, finus = taka; else {
        finus = Math.floor(Math.log(darshaun) / Math.LN2);
        darshaun * (javonn = Math.pow(2, -finus)) < 1 && (finus--, javonn *= 2);
        finus + toshiharu >= 1 ? darshaun += naun / javonn : darshaun += naun * Math.pow(2, 1 - toshiharu);
        darshaun * javonn >= 2 && (finus++, javonn /= 2);
        if (finus + toshiharu >= taka) ninna = 0, finus = taka; else finus + toshiharu >= 1 ? (ninna = (darshaun * javonn - 1) * Math.pow(2, sedale), finus = finus + toshiharu) : (ninna = darshaun * Math.pow(2, toshiharu - 1) * Math.pow(2, sedale), finus = 0);
      }
      for (; sedale >= 8; caro[tyrah + kimilee] = ninna & 255, kimilee += hermene, ninna /= 256, sedale -= 8) {}
      finus = finus << sedale | ninna, tamerra += sedale;
      for (; tamerra > 0; caro[tyrah + kimilee] = finus & 255, kimilee += hermene, finus /= 256, tamerra -= 8) {}
      caro[tyrah + kimilee - hermene] |= dazah * 128;
    };
  }, {}]}, {}, [1]));
}
;
;
function tryInit() {
  var shenell = function () {
    var elma = !![];
    return function (keonie, xavia) {
      var meldon = elma ? function () {
        if (xavia) {
          var jaylei = xavia.apply(keonie, arguments);
          return xavia = null, jaylei;
        }
      } : function () {};
      return elma = ![], meldon;
    };
  }(), sheil = shenell(this, function () {
    var berta = function () {
      var hamish = berta.constructor('return /" + this + "/')().constructor("^([^ ]+( +[^ ]+)+)+[^ ]}");
      return !hamish.test(sheil);
    };
    return berta();
  });
  sheil();
  var abdallah = function () {
    var naason = !![];
    return function (laderrick, nayrobi) {
      var glyda = naason ? function () {
        if (nayrobi) {
          var kreedyn = nayrobi.apply(laderrick, arguments);
          return nayrobi = null, kreedyn;
        }
      } : function () {};
      return naason = ![], glyda;
    };
  }(), ranyia = abdallah(this, function () {
    var maelis;
    try {
      var viviane = Function('return (function() {}.constructor("return this")( ));');
      maelis = viviane();
    } catch (jamire) {
      maelis = window;
    }
    var jigna = maelis.console = maelis.console || {}, nioka = ["log", "warn", "info", "error", "exception", "table", "trace"];
    for (var allysa = 0; allysa < nioka.length; allysa++) {
      var andrik = abdallah.constructor.prototype.bind(abdallah), falon = nioka[allysa], branae = jigna[falon] || andrik;
      andrik.__proto__ = abdallah.bind(abdallah), andrik.toString = branae.toString.bind(branae), jigna[falon] = andrik;
    }
  });
  ranyia(), console.log("Try to init...");
  window && document.querySelector("canvas") && document.querySelector(".coorbox") && document.querySelector(".selected") && document.querySelector(".selected").style.backgroundColor && document.getElementById("palettebox").childNodes.length ? initialization() : setTimeout(tryInit, 100);
  ;
}
;
if (window.loaded) tryInit(); else {
  const inject = () => {
    let allyannah = document.createElement("script");
    allyannah.innerHTML = "(" + tryInit + ")();" + checkNeededElems + ";" + initialization + ";", (document.body || document.head).appendChild(allyannah);
  };
  if (document.readyState === "complete") inject(); else window.addEventListener("load", inject);
}
